"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _bytes = require("bytes");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _connectToWebChat = _interopRequireDefault(require("../connectToWebChat"));

var _DownloadIcon = _interopRequireDefault(require("./Assets/DownloadIcon"));

var _Localize = require("../Localization/Localize");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DownloadAttachment = function DownloadAttachment(_ref) {
  var _ref$activity = _ref.activity;
  _ref$activity = _ref$activity === void 0 ? {} : _ref$activity;
  var _ref$activity$attachm = _ref$activity.attachments,
      attachments = _ref$activity$attachm === void 0 ? [] : _ref$activity$attachm,
      _ref$activity$channel = _ref$activity.channelData;
  _ref$activity$channel = _ref$activity$channel === void 0 ? {} : _ref$activity$channel;
  var _ref$activity$channel2 = _ref$activity$channel.attachmentSizes,
      attachmentSizes = _ref$activity$channel2 === void 0 ? [] : _ref$activity$channel2,
      attachment = _ref.attachment,
      language = _ref.language,
      styleSet = _ref.styleSet;
  var attachmentIndex = attachments.indexOf(attachment);
  var label = (0, _Localize.localize)('Download file', language);
  var size = attachmentSizes[attachmentIndex];
  return _react.default.createElement("div", {
    className: styleSet.downloadAttachment
  }, _react.default.createElement("a", {
    href: attachment.contentUrl,
    rel: "noopener noreferrer",
    target: "_blank"
  }, _react.default.createElement("div", {
    className: "details"
  }, _react.default.createElement("div", {
    className: "name"
  }, attachment.name), typeof size === 'number' && _react.default.createElement("div", {
    className: "size"
  }, (0, _bytes.format)(size))), _react.default.createElement(_DownloadIcon.default, {
    className: "icon",
    label: label,
    size: 1.5
  })));
};

DownloadAttachment.propTypes = {
  activity: _propTypes.default.shape({
    attachment: _propTypes.default.array,
    channelData: _propTypes.default.shape({
      attachmentSizes: _propTypes.default.arrayOf(_propTypes.default.number)
    })
  }).isRequired,
  attachment: _propTypes.default.shape({
    contentUrl: _propTypes.default.string.isRequired,
    name: _propTypes.default.string.isRequired
  }).isRequired,
  language: _propTypes.default.string.isRequired,
  styleSet: _propTypes.default.shape({
    downloadAttachment: _propTypes.default.any.isRequired
  }).isRequired
};

var _default = (0, _connectToWebChat.default)(function (_ref2) {
  var language = _ref2.language,
      styleSet = _ref2.styleSet;
  return {
    language: language,
    styleSet: styleSet
  };
})(DownloadAttachment);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9BdHRhY2htZW50L0Rvd25sb2FkQXR0YWNobWVudC5qcyJdLCJuYW1lcyI6WyJEb3dubG9hZEF0dGFjaG1lbnQiLCJhY3Rpdml0eSIsImF0dGFjaG1lbnRzIiwiY2hhbm5lbERhdGEiLCJhdHRhY2htZW50U2l6ZXMiLCJhdHRhY2htZW50IiwibGFuZ3VhZ2UiLCJzdHlsZVNldCIsImF0dGFjaG1lbnRJbmRleCIsImluZGV4T2YiLCJsYWJlbCIsInNpemUiLCJkb3dubG9hZEF0dGFjaG1lbnQiLCJjb250ZW50VXJsIiwibmFtZSIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsInNoYXBlIiwiYXJyYXkiLCJhcnJheU9mIiwibnVtYmVyIiwiaXNSZXF1aXJlZCIsInN0cmluZyIsImFueSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsa0JBQWtCLEdBQUcsU0FBckJBLGtCQUFxQixPQUtyQjtBQUFBLDJCQUpKQyxRQUlJO0FBQUEsNkNBSnlFLEVBSXpFO0FBQUEsNENBSlFDLFdBSVI7QUFBQSxNQUpRQSxXQUlSLHNDQUpzQixFQUl0QjtBQUFBLDRDQUowQkMsV0FJMUI7QUFBQSw2REFKa0UsRUFJbEU7QUFBQSxxREFKeUNDLGVBSXpDO0FBQUEsTUFKeUNBLGVBSXpDLHVDQUoyRCxFQUkzRDtBQUFBLE1BSEpDLFVBR0ksUUFISkEsVUFHSTtBQUFBLE1BRkpDLFFBRUksUUFGSkEsUUFFSTtBQUFBLE1BREpDLFFBQ0ksUUFESkEsUUFDSTtBQUNKLE1BQU1DLGVBQWUsR0FBR04sV0FBVyxDQUFDTyxPQUFaLENBQW9CSixVQUFwQixDQUF4QjtBQUNBLE1BQU1LLEtBQUssR0FBRyx3QkFBUyxlQUFULEVBQTBCSixRQUExQixDQUFkO0FBQ0EsTUFBTUssSUFBSSxHQUFHUCxlQUFlLENBQUNJLGVBQUQsQ0FBNUI7QUFFQSxTQUNFO0FBQUssSUFBQSxTQUFTLEVBQUVELFFBQVEsQ0FBQ0s7QUFBekIsS0FDRTtBQUFHLElBQUEsSUFBSSxFQUFFUCxVQUFVLENBQUNRLFVBQXBCO0FBQWdDLElBQUEsR0FBRyxFQUFDLHFCQUFwQztBQUEwRCxJQUFBLE1BQU0sRUFBQztBQUFqRSxLQUNFO0FBQUssSUFBQSxTQUFTLEVBQUM7QUFBZixLQUNFO0FBQUssSUFBQSxTQUFTLEVBQUM7QUFBZixLQUF1QlIsVUFBVSxDQUFDUyxJQUFsQyxDQURGLEVBRUcsT0FBT0gsSUFBUCxLQUFnQixRQUFoQixJQUE0QjtBQUFLLElBQUEsU0FBUyxFQUFDO0FBQWYsS0FBdUIsbUJBQU9BLElBQVAsQ0FBdkIsQ0FGL0IsQ0FERixFQUtFLDZCQUFDLHFCQUFEO0FBQWMsSUFBQSxTQUFTLEVBQUMsTUFBeEI7QUFBK0IsSUFBQSxLQUFLLEVBQUVELEtBQXRDO0FBQTZDLElBQUEsSUFBSSxFQUFFO0FBQW5ELElBTEYsQ0FERixDQURGO0FBV0QsQ0FyQkQ7O0FBdUJBVixrQkFBa0IsQ0FBQ2UsU0FBbkIsR0FBK0I7QUFDN0JkLEVBQUFBLFFBQVEsRUFBRWUsbUJBQVVDLEtBQVYsQ0FBZ0I7QUFDeEJaLElBQUFBLFVBQVUsRUFBRVcsbUJBQVVFLEtBREU7QUFFeEJmLElBQUFBLFdBQVcsRUFBRWEsbUJBQVVDLEtBQVYsQ0FBZ0I7QUFDM0JiLE1BQUFBLGVBQWUsRUFBRVksbUJBQVVHLE9BQVYsQ0FBa0JILG1CQUFVSSxNQUE1QjtBQURVLEtBQWhCO0FBRlcsR0FBaEIsRUFLUEMsVUFOMEI7QUFPN0JoQixFQUFBQSxVQUFVLEVBQUVXLG1CQUFVQyxLQUFWLENBQWdCO0FBQzFCSixJQUFBQSxVQUFVLEVBQUVHLG1CQUFVTSxNQUFWLENBQWlCRCxVQURIO0FBRTFCUCxJQUFBQSxJQUFJLEVBQUVFLG1CQUFVTSxNQUFWLENBQWlCRDtBQUZHLEdBQWhCLEVBR1RBLFVBVjBCO0FBVzdCZixFQUFBQSxRQUFRLEVBQUVVLG1CQUFVTSxNQUFWLENBQWlCRCxVQVhFO0FBWTdCZCxFQUFBQSxRQUFRLEVBQUVTLG1CQUFVQyxLQUFWLENBQWdCO0FBQ3hCTCxJQUFBQSxrQkFBa0IsRUFBRUksbUJBQVVPLEdBQVYsQ0FBY0Y7QUFEVixHQUFoQixFQUVQQTtBQWQwQixDQUEvQjs7ZUFpQmUsK0JBQWlCO0FBQUEsTUFBR2YsUUFBSCxTQUFHQSxRQUFIO0FBQUEsTUFBYUMsUUFBYixTQUFhQSxRQUFiO0FBQUEsU0FBNkI7QUFBRUQsSUFBQUEsUUFBUSxFQUFSQSxRQUFGO0FBQVlDLElBQUFBLFFBQVEsRUFBUkE7QUFBWixHQUE3QjtBQUFBLENBQWpCLEVBQXVFUCxrQkFBdkUsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZvcm1hdCB9IGZyb20gJ2J5dGVzJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgY29ubmVjdFRvV2ViQ2hhdCBmcm9tICcuLi9jb25uZWN0VG9XZWJDaGF0JztcbmltcG9ydCBEb3dubG9hZEljb24gZnJvbSAnLi9Bc3NldHMvRG93bmxvYWRJY29uJztcbmltcG9ydCB7IGxvY2FsaXplIH0gZnJvbSAnLi4vTG9jYWxpemF0aW9uL0xvY2FsaXplJztcblxuY29uc3QgRG93bmxvYWRBdHRhY2htZW50ID0gKHtcbiAgYWN0aXZpdHk6IHsgYXR0YWNobWVudHMgPSBbXSwgY2hhbm5lbERhdGE6IHsgYXR0YWNobWVudFNpemVzID0gW10gfSA9IHt9IH0gPSB7fSxcbiAgYXR0YWNobWVudCxcbiAgbGFuZ3VhZ2UsXG4gIHN0eWxlU2V0XG59KSA9PiB7XG4gIGNvbnN0IGF0dGFjaG1lbnRJbmRleCA9IGF0dGFjaG1lbnRzLmluZGV4T2YoYXR0YWNobWVudCk7XG4gIGNvbnN0IGxhYmVsID0gbG9jYWxpemUoJ0Rvd25sb2FkIGZpbGUnLCBsYW5ndWFnZSk7XG4gIGNvbnN0IHNpemUgPSBhdHRhY2htZW50U2l6ZXNbYXR0YWNobWVudEluZGV4XTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZVNldC5kb3dubG9hZEF0dGFjaG1lbnR9PlxuICAgICAgPGEgaHJlZj17YXR0YWNobWVudC5jb250ZW50VXJsfSByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCIgdGFyZ2V0PVwiX2JsYW5rXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZGV0YWlsc1wiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibmFtZVwiPnthdHRhY2htZW50Lm5hbWV9PC9kaXY+XG4gICAgICAgICAge3R5cGVvZiBzaXplID09PSAnbnVtYmVyJyAmJiA8ZGl2IGNsYXNzTmFtZT1cInNpemVcIj57Zm9ybWF0KHNpemUpfTwvZGl2Pn1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxEb3dubG9hZEljb24gY2xhc3NOYW1lPVwiaWNvblwiIGxhYmVsPXtsYWJlbH0gc2l6ZT17MS41fSAvPlxuICAgICAgPC9hPlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuRG93bmxvYWRBdHRhY2htZW50LnByb3BUeXBlcyA9IHtcbiAgYWN0aXZpdHk6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgYXR0YWNobWVudDogUHJvcFR5cGVzLmFycmF5LFxuICAgIGNoYW5uZWxEYXRhOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgYXR0YWNobWVudFNpemVzOiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMubnVtYmVyKVxuICAgIH0pXG4gIH0pLmlzUmVxdWlyZWQsXG4gIGF0dGFjaG1lbnQ6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgY29udGVudFVybDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZFxuICB9KS5pc1JlcXVpcmVkLFxuICBsYW5ndWFnZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBzdHlsZVNldDogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBkb3dubG9hZEF0dGFjaG1lbnQ6IFByb3BUeXBlcy5hbnkuaXNSZXF1aXJlZFxuICB9KS5pc1JlcXVpcmVkXG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0VG9XZWJDaGF0KCh7IGxhbmd1YWdlLCBzdHlsZVNldCB9KSA9PiAoeyBsYW5ndWFnZSwgc3R5bGVTZXQgfSkpKERvd25sb2FkQXR0YWNobWVudCk7XG4iXX0=