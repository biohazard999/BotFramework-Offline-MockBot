"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/* eslint no-magic-numbers: ["error", { "ignore": [1, 5, 24, 48, 60000, 3600000] }] */
function xMinutesAgo(dateStr) {
  var date = new Date(dateStr);
  var dateTime = date.getTime();

  if (isNaN(dateTime)) {
    return dateStr;
  }

  var now = Date.now();
  var deltaInMs = now - dateTime;
  var deltaInMinutes = Math.floor(deltaInMs / 60000);
  var deltaInHours = Math.floor(deltaInMs / 3600000);

  if (deltaInMinutes < 1) {
    return 'Alldeles nyss';
  } else if (deltaInMinutes === 1) {
    return 'För en minut sen';
  } else if (deltaInHours < 1) {
    return "".concat(deltaInMinutes, " minuter sedan");
  } else if (deltaInHours === 1) {
    return "En timme sen";
  } else if (deltaInHours < 5) {
    return "".concat(deltaInHours, " timmar sen");
  } else if (deltaInHours <= 24) {
    return "Idag";
  } else if (deltaInHours <= 48) {
    return "Ig\xE5r";
  } else if (window.Intl) {
    return new Intl.DateTimeFormat('sv-SE').format(date);
  }

  return date.toLocaleString('sv-SE', {
    day: '2-digit',
    hour: '2-digit',
    hour12: false,
    minute: '2-digit',
    month: '2-digit',
    year: 'numeric'
  });
}

function botSaidSomething(avatarInitials, text) {
  return "Bot ".concat(avatarInitials, " sa, ").concat(text);
}

function userSaidSomething(avatarInitials, text) {
  return "Anv\xE4ndare ".concat(avatarInitials, " sa, ").concat(text);
}

var _default = {
  FAILED_CONNECTION_NOTIFICATION: 'Kunde inte ansluta.',
  // Do not localize {Retry}; it is a placeholder for "Retry". English translation should be, "Send failed. Retry."
  SEND_FAILED_KEY: "kunde inte skicka, {Retry}.",
  SLOW_CONNECTION_NOTIFICATION: 'Det tar längre än vanligt att ansluta.',
  'Bot said something': botSaidSomething,
  'User said something': userSaidSomething,
  'X minutes ago': xMinutesAgo,
  // '[File of type '%1']': '[File of type '%1']",
  // '[Unknown Card '%1']': '[Unknown Card '%1']',
  'Adaptive Card parse error': 'Adaptive Card parse error',
  'Adaptive Card render error': 'Adaptive Card render error',
  Chat: 'Chatt',
  'Download file': 'Ladda ned fil',
  'Microphone off': 'Mikrofon av',
  'Microphone on': 'Mikrofon på',
  Left: 'Vänster',
  'Listening…': 'Lyssnar…',
  'New messages': 'Nya meddelanden',
  Right: 'Höger',
  Retry: 'försök igen',
  Send: 'Skicka',
  Sending: 'Skickar',
  Speak: 'Läs upp',
  'Starting…': 'Startar…',
  Tax: 'Skatt',
  Total: 'Totalt',
  'Type your message': 'Skriv ditt meddelande',
  'Upload file': 'Ladd upp fil',
  VAT: 'Moms'
};
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Mb2NhbGl6YXRpb24vc3YtU0UuanMiXSwibmFtZXMiOlsieE1pbnV0ZXNBZ28iLCJkYXRlU3RyIiwiZGF0ZSIsIkRhdGUiLCJkYXRlVGltZSIsImdldFRpbWUiLCJpc05hTiIsIm5vdyIsImRlbHRhSW5NcyIsImRlbHRhSW5NaW51dGVzIiwiTWF0aCIsImZsb29yIiwiZGVsdGFJbkhvdXJzIiwid2luZG93IiwiSW50bCIsIkRhdGVUaW1lRm9ybWF0IiwiZm9ybWF0IiwidG9Mb2NhbGVTdHJpbmciLCJkYXkiLCJob3VyIiwiaG91cjEyIiwibWludXRlIiwibW9udGgiLCJ5ZWFyIiwiYm90U2FpZFNvbWV0aGluZyIsImF2YXRhckluaXRpYWxzIiwidGV4dCIsInVzZXJTYWlkU29tZXRoaW5nIiwiRkFJTEVEX0NPTk5FQ1RJT05fTk9USUZJQ0FUSU9OIiwiU0VORF9GQUlMRURfS0VZIiwiU0xPV19DT05ORUNUSU9OX05PVElGSUNBVElPTiIsIkNoYXQiLCJMZWZ0IiwiUmlnaHQiLCJSZXRyeSIsIlNlbmQiLCJTZW5kaW5nIiwiU3BlYWsiLCJUYXgiLCJUb3RhbCIsIlZBVCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBRUEsU0FBU0EsV0FBVCxDQUFxQkMsT0FBckIsRUFBOEI7QUFDNUIsTUFBTUMsSUFBSSxHQUFHLElBQUlDLElBQUosQ0FBU0YsT0FBVCxDQUFiO0FBQ0EsTUFBTUcsUUFBUSxHQUFHRixJQUFJLENBQUNHLE9BQUwsRUFBakI7O0FBRUEsTUFBSUMsS0FBSyxDQUFDRixRQUFELENBQVQsRUFBcUI7QUFDbkIsV0FBT0gsT0FBUDtBQUNEOztBQUVELE1BQU1NLEdBQUcsR0FBR0osSUFBSSxDQUFDSSxHQUFMLEVBQVo7QUFDQSxNQUFNQyxTQUFTLEdBQUdELEdBQUcsR0FBR0gsUUFBeEI7QUFDQSxNQUFNSyxjQUFjLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXSCxTQUFTLEdBQUcsS0FBdkIsQ0FBdkI7QUFDQSxNQUFNSSxZQUFZLEdBQUdGLElBQUksQ0FBQ0MsS0FBTCxDQUFXSCxTQUFTLEdBQUcsT0FBdkIsQ0FBckI7O0FBRUEsTUFBSUMsY0FBYyxHQUFHLENBQXJCLEVBQXdCO0FBQ3RCLFdBQU8sZUFBUDtBQUNELEdBRkQsTUFFTyxJQUFJQSxjQUFjLEtBQUssQ0FBdkIsRUFBMEI7QUFDL0IsV0FBTyxrQkFBUDtBQUNELEdBRk0sTUFFQSxJQUFJRyxZQUFZLEdBQUcsQ0FBbkIsRUFBc0I7QUFDM0IscUJBQVVILGNBQVY7QUFDRCxHQUZNLE1BRUEsSUFBSUcsWUFBWSxLQUFLLENBQXJCLEVBQXdCO0FBQzdCO0FBQ0QsR0FGTSxNQUVBLElBQUlBLFlBQVksR0FBRyxDQUFuQixFQUFzQjtBQUMzQixxQkFBVUEsWUFBVjtBQUNELEdBRk0sTUFFQSxJQUFJQSxZQUFZLElBQUksRUFBcEIsRUFBd0I7QUFDN0I7QUFDRCxHQUZNLE1BRUEsSUFBSUEsWUFBWSxJQUFJLEVBQXBCLEVBQXdCO0FBQzdCO0FBQ0QsR0FGTSxNQUVBLElBQUlDLE1BQU0sQ0FBQ0MsSUFBWCxFQUFpQjtBQUN0QixXQUFPLElBQUlBLElBQUksQ0FBQ0MsY0FBVCxDQUF3QixPQUF4QixFQUFpQ0MsTUFBakMsQ0FBd0NkLElBQXhDLENBQVA7QUFDRDs7QUFFRCxTQUFPQSxJQUFJLENBQUNlLGNBQUwsQ0FBb0IsT0FBcEIsRUFBNkI7QUFDbENDLElBQUFBLEdBQUcsRUFBRSxTQUQ2QjtBQUVsQ0MsSUFBQUEsSUFBSSxFQUFFLFNBRjRCO0FBR2xDQyxJQUFBQSxNQUFNLEVBQUUsS0FIMEI7QUFJbENDLElBQUFBLE1BQU0sRUFBRSxTQUowQjtBQUtsQ0MsSUFBQUEsS0FBSyxFQUFFLFNBTDJCO0FBTWxDQyxJQUFBQSxJQUFJLEVBQUU7QUFONEIsR0FBN0IsQ0FBUDtBQVFEOztBQUVELFNBQVNDLGdCQUFULENBQTBCQyxjQUExQixFQUEwQ0MsSUFBMUMsRUFBZ0Q7QUFDOUMsdUJBQWNELGNBQWQsa0JBQW9DQyxJQUFwQztBQUNEOztBQUVELFNBQVNDLGlCQUFULENBQTJCRixjQUEzQixFQUEyQ0MsSUFBM0MsRUFBaUQ7QUFDL0MsZ0NBQW9CRCxjQUFwQixrQkFBMENDLElBQTFDO0FBQ0Q7O2VBRWM7QUFDYkUsRUFBQUEsOEJBQThCLEVBQUUscUJBRG5CO0FBRWI7QUFDQUMsRUFBQUEsZUFBZSwrQkFIRjtBQUliQyxFQUFBQSw0QkFBNEIsRUFBRSx3Q0FKakI7QUFLYix3QkFBc0JOLGdCQUxUO0FBTWIseUJBQXVCRyxpQkFOVjtBQU9iLG1CQUFpQjNCLFdBUEo7QUFRYjtBQUNBO0FBQ0EsK0JBQTZCLDJCQVZoQjtBQVdiLGdDQUE4Qiw0QkFYakI7QUFZYitCLEVBQUFBLElBQUksRUFBRSxPQVpPO0FBYWIsbUJBQWlCLGVBYko7QUFjYixvQkFBa0IsYUFkTDtBQWViLG1CQUFpQixhQWZKO0FBZ0JiQyxFQUFBQSxJQUFJLEVBQUUsU0FoQk87QUFpQmIsZ0JBQWMsVUFqQkQ7QUFrQmIsa0JBQWdCLGlCQWxCSDtBQW1CYkMsRUFBQUEsS0FBSyxFQUFFLE9BbkJNO0FBb0JiQyxFQUFBQSxLQUFLLEVBQUUsYUFwQk07QUFxQmJDLEVBQUFBLElBQUksRUFBRSxRQXJCTztBQXNCYkMsRUFBQUEsT0FBTyxFQUFFLFNBdEJJO0FBdUJiQyxFQUFBQSxLQUFLLEVBQUUsU0F2Qk07QUF3QmIsZUFBYSxVQXhCQTtBQXlCYkMsRUFBQUEsR0FBRyxFQUFFLE9BekJRO0FBMEJiQyxFQUFBQSxLQUFLLEVBQUUsUUExQk07QUEyQmIsdUJBQXFCLHVCQTNCUjtBQTRCYixpQkFBZSxjQTVCRjtBQTZCYkMsRUFBQUEsR0FBRyxFQUFFO0FBN0JRLEMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQgbm8tbWFnaWMtbnVtYmVyczogW1wiZXJyb3JcIiwgeyBcImlnbm9yZVwiOiBbMSwgNSwgMjQsIDQ4LCA2MDAwMCwgMzYwMDAwMF0gfV0gKi9cblxuZnVuY3Rpb24geE1pbnV0ZXNBZ28oZGF0ZVN0cikge1xuICBjb25zdCBkYXRlID0gbmV3IERhdGUoZGF0ZVN0cik7XG4gIGNvbnN0IGRhdGVUaW1lID0gZGF0ZS5nZXRUaW1lKCk7XG5cbiAgaWYgKGlzTmFOKGRhdGVUaW1lKSkge1xuICAgIHJldHVybiBkYXRlU3RyO1xuICB9XG5cbiAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgY29uc3QgZGVsdGFJbk1zID0gbm93IC0gZGF0ZVRpbWU7XG4gIGNvbnN0IGRlbHRhSW5NaW51dGVzID0gTWF0aC5mbG9vcihkZWx0YUluTXMgLyA2MDAwMCk7XG4gIGNvbnN0IGRlbHRhSW5Ib3VycyA9IE1hdGguZmxvb3IoZGVsdGFJbk1zIC8gMzYwMDAwMCk7XG5cbiAgaWYgKGRlbHRhSW5NaW51dGVzIDwgMSkge1xuICAgIHJldHVybiAnQWxsZGVsZXMgbnlzcyc7XG4gIH0gZWxzZSBpZiAoZGVsdGFJbk1pbnV0ZXMgPT09IDEpIHtcbiAgICByZXR1cm4gJ0bDtnIgZW4gbWludXQgc2VuJztcbiAgfSBlbHNlIGlmIChkZWx0YUluSG91cnMgPCAxKSB7XG4gICAgcmV0dXJuIGAke2RlbHRhSW5NaW51dGVzfSBtaW51dGVyIHNlZGFuYDtcbiAgfSBlbHNlIGlmIChkZWx0YUluSG91cnMgPT09IDEpIHtcbiAgICByZXR1cm4gYEVuIHRpbW1lIHNlbmA7XG4gIH0gZWxzZSBpZiAoZGVsdGFJbkhvdXJzIDwgNSkge1xuICAgIHJldHVybiBgJHtkZWx0YUluSG91cnN9IHRpbW1hciBzZW5gO1xuICB9IGVsc2UgaWYgKGRlbHRhSW5Ib3VycyA8PSAyNCkge1xuICAgIHJldHVybiBgSWRhZ2A7XG4gIH0gZWxzZSBpZiAoZGVsdGFJbkhvdXJzIDw9IDQ4KSB7XG4gICAgcmV0dXJuIGBJZ8OlcmA7XG4gIH0gZWxzZSBpZiAod2luZG93LkludGwpIHtcbiAgICByZXR1cm4gbmV3IEludGwuRGF0ZVRpbWVGb3JtYXQoJ3N2LVNFJykuZm9ybWF0KGRhdGUpO1xuICB9XG5cbiAgcmV0dXJuIGRhdGUudG9Mb2NhbGVTdHJpbmcoJ3N2LVNFJywge1xuICAgIGRheTogJzItZGlnaXQnLFxuICAgIGhvdXI6ICcyLWRpZ2l0JyxcbiAgICBob3VyMTI6IGZhbHNlLFxuICAgIG1pbnV0ZTogJzItZGlnaXQnLFxuICAgIG1vbnRoOiAnMi1kaWdpdCcsXG4gICAgeWVhcjogJ251bWVyaWMnXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBib3RTYWlkU29tZXRoaW5nKGF2YXRhckluaXRpYWxzLCB0ZXh0KSB7XG4gIHJldHVybiBgQm90ICR7YXZhdGFySW5pdGlhbHN9IHNhLCAke3RleHR9YDtcbn1cblxuZnVuY3Rpb24gdXNlclNhaWRTb21ldGhpbmcoYXZhdGFySW5pdGlhbHMsIHRleHQpIHtcbiAgcmV0dXJuIGBBbnbDpG5kYXJlICR7YXZhdGFySW5pdGlhbHN9IHNhLCAke3RleHR9YDtcbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBGQUlMRURfQ09OTkVDVElPTl9OT1RJRklDQVRJT046ICdLdW5kZSBpbnRlIGFuc2x1dGEuJyxcbiAgLy8gRG8gbm90IGxvY2FsaXplIHtSZXRyeX07IGl0IGlzIGEgcGxhY2Vob2xkZXIgZm9yIFwiUmV0cnlcIi4gRW5nbGlzaCB0cmFuc2xhdGlvbiBzaG91bGQgYmUsIFwiU2VuZCBmYWlsZWQuIFJldHJ5LlwiXG4gIFNFTkRfRkFJTEVEX0tFWTogYGt1bmRlIGludGUgc2tpY2thLCB7UmV0cnl9LmAsXG4gIFNMT1dfQ09OTkVDVElPTl9OT1RJRklDQVRJT046ICdEZXQgdGFyIGzDpG5ncmUgw6RuIHZhbmxpZ3QgYXR0IGFuc2x1dGEuJyxcbiAgJ0JvdCBzYWlkIHNvbWV0aGluZyc6IGJvdFNhaWRTb21ldGhpbmcsXG4gICdVc2VyIHNhaWQgc29tZXRoaW5nJzogdXNlclNhaWRTb21ldGhpbmcsXG4gICdYIG1pbnV0ZXMgYWdvJzogeE1pbnV0ZXNBZ28sXG4gIC8vICdbRmlsZSBvZiB0eXBlICclMSddJzogJ1tGaWxlIG9mIHR5cGUgJyUxJ11cIixcbiAgLy8gJ1tVbmtub3duIENhcmQgJyUxJ10nOiAnW1Vua25vd24gQ2FyZCAnJTEnXScsXG4gICdBZGFwdGl2ZSBDYXJkIHBhcnNlIGVycm9yJzogJ0FkYXB0aXZlIENhcmQgcGFyc2UgZXJyb3InLFxuICAnQWRhcHRpdmUgQ2FyZCByZW5kZXIgZXJyb3InOiAnQWRhcHRpdmUgQ2FyZCByZW5kZXIgZXJyb3InLFxuICBDaGF0OiAnQ2hhdHQnLFxuICAnRG93bmxvYWQgZmlsZSc6ICdMYWRkYSBuZWQgZmlsJyxcbiAgJ01pY3JvcGhvbmUgb2ZmJzogJ01pa3JvZm9uIGF2JyxcbiAgJ01pY3JvcGhvbmUgb24nOiAnTWlrcm9mb24gcMOlJyxcbiAgTGVmdDogJ1bDpG5zdGVyJyxcbiAgJ0xpc3RlbmluZ+KApic6ICdMeXNzbmFy4oCmJyxcbiAgJ05ldyBtZXNzYWdlcyc6ICdOeWEgbWVkZGVsYW5kZW4nLFxuICBSaWdodDogJ0jDtmdlcicsXG4gIFJldHJ5OiAnZsO2cnPDtmsgaWdlbicsXG4gIFNlbmQ6ICdTa2lja2EnLFxuICBTZW5kaW5nOiAnU2tpY2thcicsXG4gIFNwZWFrOiAnTMOkcyB1cHAnLFxuICAnU3RhcnRpbmfigKYnOiAnU3RhcnRhcuKApicsXG4gIFRheDogJ1NrYXR0JyxcbiAgVG90YWw6ICdUb3RhbHQnLFxuICAnVHlwZSB5b3VyIG1lc3NhZ2UnOiAnU2tyaXYgZGl0dCBtZWRkZWxhbmRlJyxcbiAgJ1VwbG9hZCBmaWxlJzogJ0xhZGQgdXBwIGZpbCcsXG4gIFZBVDogJ01vbXMnXG59O1xuIl19