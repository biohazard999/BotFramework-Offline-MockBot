"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.localize = localize;
exports.default = void 0;

var _connectToWebChat = _interopRequireDefault(require("../connectToWebChat"));

var _csCZ = _interopRequireDefault(require("./cs-CZ"));

var _daDK = _interopRequireDefault(require("./da-DK"));

var _deDE = _interopRequireDefault(require("./de-DE"));

var _elGR = _interopRequireDefault(require("./el-GR"));

var _enUS = _interopRequireDefault(require("./en-US"));

var _esES = _interopRequireDefault(require("./es-ES"));

var _fiFI = _interopRequireDefault(require("./fi-FI"));

var _frFR = _interopRequireDefault(require("./fr-FR"));

var _huHU = _interopRequireDefault(require("./hu-HU"));

var _itIT = _interopRequireDefault(require("./it-IT"));

var _jaJP = _interopRequireDefault(require("./ja-JP"));

var _koKR = _interopRequireDefault(require("./ko-KR"));

var _lvLV = _interopRequireDefault(require("./lv-LV"));

var _nbNO = _interopRequireDefault(require("./nb-NO"));

var _nlNL = _interopRequireDefault(require("./nl-NL"));

var _plPL = _interopRequireDefault(require("./pl-PL"));

var _ptBR = _interopRequireDefault(require("./pt-BR"));

var _ptPT = _interopRequireDefault(require("./pt-PT"));

var _ruRU = _interopRequireDefault(require("./ru-RU"));

var _svSE = _interopRequireDefault(require("./sv-SE"));

var _trTR = _interopRequireDefault(require("./tr-TR"));

var _zhHANS = _interopRequireDefault(require("./zh-HANS"));

var _zhHANT = _interopRequireDefault(require("./zh-HANT"));

var _zhYUE = _interopRequireDefault(require("./zh-YUE"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function normalizeLanguage(language) {
  language = language.toLowerCase();

  if (language.startsWith('cs')) {
    return 'cs-CZ';
  } else if (language.startsWith('da')) {
    return 'da-DK';
  } else if (language.startsWith('de')) {
    return 'de-DE';
  } else if (language.startsWith('el')) {
    return 'el-GR';
  } else if (language.startsWith('es')) {
    return 'es-ES';
  } else if (language.startsWith('fi')) {
    return 'fi-FI';
  } else if (language.startsWith('fr')) {
    return 'fr-FR';
  } else if (language.startsWith('hu')) {
    return 'hu-HU';
  } else if (language.startsWith('it')) {
    return 'it-IT';
  } else if (language.startsWith('ja')) {
    return 'ja-JP';
  } else if (language.startsWith('ko')) {
    return 'ko-KR';
  } else if (language.startsWith('lv')) {
    return 'lv-LV';
  } else if (language.startsWith('nb') || language.startsWith('nn') || language.startsWith('no')) {
    return 'nb-NO';
  } else if (language.startsWith('nl')) {
    return 'nl-NL';
  } else if (language.startsWith('pl')) {
    return 'pl-PL';
  } else if (language === 'pt-br') {
    return 'pt-BR';
  } else if (language.startsWith('pt')) {
    return 'pt-PT';
  } else if (language.startsWith('ru')) {
    return 'ru-RU';
  } else if (language.startsWith('sv')) {
    return 'sv-SE';
  } else if (language.startsWith('tr')) {
    return 'tr-TR';
  } else if (language === 'zh-yue') {
    return 'zh-YUE';
  } else if (language === 'zh-hant' || language === 'zh-hk' || language === 'zh-mo' || language === 'zh-tw') {
    return 'zh-HANT';
  } else if (language.startsWith('zh')) {
    return 'zh-HANS';
  }

  return 'en-US';
}

function getStrings(language) {
  switch (normalizeLanguage(language || '')) {
    case 'cs-CZ':
      return _csCZ.default;

    case 'da-DK':
      return _daDK.default;

    case 'de-DE':
      return _deDE.default;

    case 'el-GR':
      return _elGR.default;

    case 'es-ES':
      return _esES.default;

    case 'fi-FI':
      return _fiFI.default;

    case 'fr-FR':
      return _frFR.default;

    case 'hu-HU':
      return _huHU.default;

    case 'it-IT':
      return _itIT.default;

    case 'ja-JP':
      return _jaJP.default;

    case 'ko-KR':
      return _koKR.default;

    case 'lv-LV':
      return _lvLV.default;

    case 'nb-NO':
      return _nbNO.default;

    case 'nl-NL':
      return _nlNL.default;

    case 'pl-PL':
      return _plPL.default;

    case 'pt-BR':
      return _ptBR.default;

    case 'pt-PT':
      return _ptPT.default;

    case 'ru-RU':
      return _ruRU.default;

    case 'sv-SE':
      return _svSE.default;

    case 'tr-TR':
      return _trTR.default;

    case 'zh-HANS':
      return _zhHANS.default;

    case 'zh-HANT':
      return _zhHANT.default;

    case 'zh-YUE':
      return _zhYUE.default;

    default:
      return _enUS.default;
  }
}

function localize(text, language) {
  var string = (getStrings(language) || {})[text] || _enUS.default[text];

  if (typeof string === 'function') {
    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    return string.apply(void 0, args);
  }

  return string || text;
}

var _default = (0, _connectToWebChat.default)(function (_ref) {
  var language = _ref.language;
  return {
    language: language
  };
})(function (_ref2) {
  var args = _ref2.args,
      language = _ref2.language,
      text = _ref2.text;
  return localize.apply(void 0, [text, language].concat(_toConsumableArray(args || [])));
});

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,