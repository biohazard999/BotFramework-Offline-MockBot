"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/* eslint no-magic-numbers: ["error", { "ignore": [1, 5, 24, 48, 60000, 3600000] }] */
function xMinutesAgo(dateStr) {
  var date = new Date(dateStr);
  var dateTime = date.getTime();

  if (isNaN(dateTime)) {
    return dateStr;
  }

  var now = Date.now();
  var deltaInMs = now - dateTime;
  var deltaInMinutes = Math.floor(deltaInMs / 60000);
  var deltaInHours = Math.floor(deltaInMs / 3600000);

  if (deltaInMinutes < 1) {
    return 'Agora a pouco';
  } else if (deltaInMinutes === 1) {
    return 'Um minuto atrás';
  } else if (deltaInHours < 1) {
    return "".concat(deltaInMinutes, " minutos atr\xE1s");
  } else if (deltaInHours === 1) {
    return "Uma hora atr\xE1s";
  } else if (deltaInHours < 5) {
    return "".concat(deltaInHours, " horas atr\xE1s");
  } else if (deltaInHours <= 24) {
    return "Hoje";
  } else if (deltaInHours <= 48) {
    return "Ontem";
  } else if (window.Intl) {
    return new Intl.DateTimeFormat('pt-BR').format(date);
  }

  return date.toLocaleString('pt-BR', {
    day: '2-digit',
    hour: '2-digit',
    hour12: false,
    minute: '2-digit',
    month: '2-digit',
    year: 'numeric'
  });
}

var _default = {
  FAILED_CONNECTION_NOTIFICATION: 'Não foi possível conectar',
  // Do not localize {Retry}; it is a placeholder for "Retry". English translation should be, "Send failed. Retry."
  SEND_FAILED_KEY: "n\xE3o pude enviar, {Retry}.",
  SLOW_CONNECTION_NOTIFICATION: 'A conexão está levando mais tempo que o normal.',
  Chat: 'Bate-papo',
  'Download file': 'Baixar arquivo',
  'Microphone off': 'Microfone desligado',
  'Microphone on': 'Microfone ligado',
  'Listening…': 'Ouvindo…',
  Retry: 'Repetir',
  Send: 'Enviar',
  Sending: 'enviando',
  Speak: 'Falar',
  'Starting…': 'Iniciando…',
  Tax: 'Imposto',
  Total: 'Total',
  'Type your message': 'Digite sua mensagem',
  'Upload file': 'Subir arquivo',
  VAT: 'VAT',
  'X minutes ago': xMinutesAgo
};
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Mb2NhbGl6YXRpb24vcHQtQlIuanMiXSwibmFtZXMiOlsieE1pbnV0ZXNBZ28iLCJkYXRlU3RyIiwiZGF0ZSIsIkRhdGUiLCJkYXRlVGltZSIsImdldFRpbWUiLCJpc05hTiIsIm5vdyIsImRlbHRhSW5NcyIsImRlbHRhSW5NaW51dGVzIiwiTWF0aCIsImZsb29yIiwiZGVsdGFJbkhvdXJzIiwid2luZG93IiwiSW50bCIsIkRhdGVUaW1lRm9ybWF0IiwiZm9ybWF0IiwidG9Mb2NhbGVTdHJpbmciLCJkYXkiLCJob3VyIiwiaG91cjEyIiwibWludXRlIiwibW9udGgiLCJ5ZWFyIiwiRkFJTEVEX0NPTk5FQ1RJT05fTk9USUZJQ0FUSU9OIiwiU0VORF9GQUlMRURfS0VZIiwiU0xPV19DT05ORUNUSU9OX05PVElGSUNBVElPTiIsIkNoYXQiLCJSZXRyeSIsIlNlbmQiLCJTZW5kaW5nIiwiU3BlYWsiLCJUYXgiLCJUb3RhbCIsIlZBVCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBRUEsU0FBU0EsV0FBVCxDQUFxQkMsT0FBckIsRUFBOEI7QUFDNUIsTUFBTUMsSUFBSSxHQUFHLElBQUlDLElBQUosQ0FBU0YsT0FBVCxDQUFiO0FBQ0EsTUFBTUcsUUFBUSxHQUFHRixJQUFJLENBQUNHLE9BQUwsRUFBakI7O0FBRUEsTUFBSUMsS0FBSyxDQUFDRixRQUFELENBQVQsRUFBcUI7QUFDbkIsV0FBT0gsT0FBUDtBQUNEOztBQUVELE1BQU1NLEdBQUcsR0FBR0osSUFBSSxDQUFDSSxHQUFMLEVBQVo7QUFDQSxNQUFNQyxTQUFTLEdBQUdELEdBQUcsR0FBR0gsUUFBeEI7QUFDQSxNQUFNSyxjQUFjLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXSCxTQUFTLEdBQUcsS0FBdkIsQ0FBdkI7QUFDQSxNQUFNSSxZQUFZLEdBQUdGLElBQUksQ0FBQ0MsS0FBTCxDQUFXSCxTQUFTLEdBQUcsT0FBdkIsQ0FBckI7O0FBRUEsTUFBSUMsY0FBYyxHQUFHLENBQXJCLEVBQXdCO0FBQ3RCLFdBQU8sZUFBUDtBQUNELEdBRkQsTUFFTyxJQUFJQSxjQUFjLEtBQUssQ0FBdkIsRUFBMEI7QUFDL0IsV0FBTyxpQkFBUDtBQUNELEdBRk0sTUFFQSxJQUFJRyxZQUFZLEdBQUcsQ0FBbkIsRUFBc0I7QUFDM0IscUJBQVVILGNBQVY7QUFDRCxHQUZNLE1BRUEsSUFBSUcsWUFBWSxLQUFLLENBQXJCLEVBQXdCO0FBQzdCO0FBQ0QsR0FGTSxNQUVBLElBQUlBLFlBQVksR0FBRyxDQUFuQixFQUFzQjtBQUMzQixxQkFBVUEsWUFBVjtBQUNELEdBRk0sTUFFQSxJQUFJQSxZQUFZLElBQUksRUFBcEIsRUFBd0I7QUFDN0I7QUFDRCxHQUZNLE1BRUEsSUFBSUEsWUFBWSxJQUFJLEVBQXBCLEVBQXdCO0FBQzdCO0FBQ0QsR0FGTSxNQUVBLElBQUlDLE1BQU0sQ0FBQ0MsSUFBWCxFQUFpQjtBQUN0QixXQUFPLElBQUlBLElBQUksQ0FBQ0MsY0FBVCxDQUF3QixPQUF4QixFQUFpQ0MsTUFBakMsQ0FBd0NkLElBQXhDLENBQVA7QUFDRDs7QUFFRCxTQUFPQSxJQUFJLENBQUNlLGNBQUwsQ0FBb0IsT0FBcEIsRUFBNkI7QUFDbENDLElBQUFBLEdBQUcsRUFBRSxTQUQ2QjtBQUVsQ0MsSUFBQUEsSUFBSSxFQUFFLFNBRjRCO0FBR2xDQyxJQUFBQSxNQUFNLEVBQUUsS0FIMEI7QUFJbENDLElBQUFBLE1BQU0sRUFBRSxTQUowQjtBQUtsQ0MsSUFBQUEsS0FBSyxFQUFFLFNBTDJCO0FBTWxDQyxJQUFBQSxJQUFJLEVBQUU7QUFONEIsR0FBN0IsQ0FBUDtBQVFEOztlQUVjO0FBQ2JDLEVBQUFBLDhCQUE4QixFQUFFLDJCQURuQjtBQUViO0FBQ0FDLEVBQUFBLGVBQWUsZ0NBSEY7QUFJYkMsRUFBQUEsNEJBQTRCLEVBQUUsaURBSmpCO0FBS2JDLEVBQUFBLElBQUksRUFBRSxXQUxPO0FBTWIsbUJBQWlCLGdCQU5KO0FBT2Isb0JBQWtCLHFCQVBMO0FBUWIsbUJBQWlCLGtCQVJKO0FBU2IsZ0JBQWMsVUFURDtBQVViQyxFQUFBQSxLQUFLLEVBQUUsU0FWTTtBQVdiQyxFQUFBQSxJQUFJLEVBQUUsUUFYTztBQVliQyxFQUFBQSxPQUFPLEVBQUUsVUFaSTtBQWFiQyxFQUFBQSxLQUFLLEVBQUUsT0FiTTtBQWNiLGVBQWEsWUFkQTtBQWViQyxFQUFBQSxHQUFHLEVBQUUsU0FmUTtBQWdCYkMsRUFBQUEsS0FBSyxFQUFFLE9BaEJNO0FBaUJiLHVCQUFxQixxQkFqQlI7QUFrQmIsaUJBQWUsZUFsQkY7QUFtQmJDLEVBQUFBLEdBQUcsRUFBRSxLQW5CUTtBQW9CYixtQkFBaUJsQztBQXBCSixDIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50IG5vLW1hZ2ljLW51bWJlcnM6IFtcImVycm9yXCIsIHsgXCJpZ25vcmVcIjogWzEsIDUsIDI0LCA0OCwgNjAwMDAsIDM2MDAwMDBdIH1dICovXG5cbmZ1bmN0aW9uIHhNaW51dGVzQWdvKGRhdGVTdHIpIHtcbiAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKGRhdGVTdHIpO1xuICBjb25zdCBkYXRlVGltZSA9IGRhdGUuZ2V0VGltZSgpO1xuXG4gIGlmIChpc05hTihkYXRlVGltZSkpIHtcbiAgICByZXR1cm4gZGF0ZVN0cjtcbiAgfVxuXG4gIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG4gIGNvbnN0IGRlbHRhSW5NcyA9IG5vdyAtIGRhdGVUaW1lO1xuICBjb25zdCBkZWx0YUluTWludXRlcyA9IE1hdGguZmxvb3IoZGVsdGFJbk1zIC8gNjAwMDApO1xuICBjb25zdCBkZWx0YUluSG91cnMgPSBNYXRoLmZsb29yKGRlbHRhSW5NcyAvIDM2MDAwMDApO1xuXG4gIGlmIChkZWx0YUluTWludXRlcyA8IDEpIHtcbiAgICByZXR1cm4gJ0Fnb3JhIGEgcG91Y28nO1xuICB9IGVsc2UgaWYgKGRlbHRhSW5NaW51dGVzID09PSAxKSB7XG4gICAgcmV0dXJuICdVbSBtaW51dG8gYXRyw6FzJztcbiAgfSBlbHNlIGlmIChkZWx0YUluSG91cnMgPCAxKSB7XG4gICAgcmV0dXJuIGAke2RlbHRhSW5NaW51dGVzfSBtaW51dG9zIGF0csOhc2A7XG4gIH0gZWxzZSBpZiAoZGVsdGFJbkhvdXJzID09PSAxKSB7XG4gICAgcmV0dXJuIGBVbWEgaG9yYSBhdHLDoXNgO1xuICB9IGVsc2UgaWYgKGRlbHRhSW5Ib3VycyA8IDUpIHtcbiAgICByZXR1cm4gYCR7ZGVsdGFJbkhvdXJzfSBob3JhcyBhdHLDoXNgO1xuICB9IGVsc2UgaWYgKGRlbHRhSW5Ib3VycyA8PSAyNCkge1xuICAgIHJldHVybiBgSG9qZWA7XG4gIH0gZWxzZSBpZiAoZGVsdGFJbkhvdXJzIDw9IDQ4KSB7XG4gICAgcmV0dXJuIGBPbnRlbWA7XG4gIH0gZWxzZSBpZiAod2luZG93LkludGwpIHtcbiAgICByZXR1cm4gbmV3IEludGwuRGF0ZVRpbWVGb3JtYXQoJ3B0LUJSJykuZm9ybWF0KGRhdGUpO1xuICB9XG5cbiAgcmV0dXJuIGRhdGUudG9Mb2NhbGVTdHJpbmcoJ3B0LUJSJywge1xuICAgIGRheTogJzItZGlnaXQnLFxuICAgIGhvdXI6ICcyLWRpZ2l0JyxcbiAgICBob3VyMTI6IGZhbHNlLFxuICAgIG1pbnV0ZTogJzItZGlnaXQnLFxuICAgIG1vbnRoOiAnMi1kaWdpdCcsXG4gICAgeWVhcjogJ251bWVyaWMnXG4gIH0pO1xufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIEZBSUxFRF9DT05ORUNUSU9OX05PVElGSUNBVElPTjogJ07Do28gZm9pIHBvc3PDrXZlbCBjb25lY3RhcicsXG4gIC8vIERvIG5vdCBsb2NhbGl6ZSB7UmV0cnl9OyBpdCBpcyBhIHBsYWNlaG9sZGVyIGZvciBcIlJldHJ5XCIuIEVuZ2xpc2ggdHJhbnNsYXRpb24gc2hvdWxkIGJlLCBcIlNlbmQgZmFpbGVkLiBSZXRyeS5cIlxuICBTRU5EX0ZBSUxFRF9LRVk6IGBuw6NvIHB1ZGUgZW52aWFyLCB7UmV0cnl9LmAsXG4gIFNMT1dfQ09OTkVDVElPTl9OT1RJRklDQVRJT046ICdBIGNvbmV4w6NvIGVzdMOhIGxldmFuZG8gbWFpcyB0ZW1wbyBxdWUgbyBub3JtYWwuJyxcbiAgQ2hhdDogJ0JhdGUtcGFwbycsXG4gICdEb3dubG9hZCBmaWxlJzogJ0JhaXhhciBhcnF1aXZvJyxcbiAgJ01pY3JvcGhvbmUgb2ZmJzogJ01pY3JvZm9uZSBkZXNsaWdhZG8nLFxuICAnTWljcm9waG9uZSBvbic6ICdNaWNyb2ZvbmUgbGlnYWRvJyxcbiAgJ0xpc3RlbmluZ+KApic6ICdPdXZpbmRv4oCmJyxcbiAgUmV0cnk6ICdSZXBldGlyJyxcbiAgU2VuZDogJ0VudmlhcicsXG4gIFNlbmRpbmc6ICdlbnZpYW5kbycsXG4gIFNwZWFrOiAnRmFsYXInLFxuICAnU3RhcnRpbmfigKYnOiAnSW5pY2lhbmRv4oCmJyxcbiAgVGF4OiAnSW1wb3N0bycsXG4gIFRvdGFsOiAnVG90YWwnLFxuICAnVHlwZSB5b3VyIG1lc3NhZ2UnOiAnRGlnaXRlIHN1YSBtZW5zYWdlbScsXG4gICdVcGxvYWQgZmlsZSc6ICdTdWJpciBhcnF1aXZvJyxcbiAgVkFUOiAnVkFUJyxcbiAgJ1ggbWludXRlcyBhZ28nOiB4TWludXRlc0Fnb1xufTtcbiJdfQ==