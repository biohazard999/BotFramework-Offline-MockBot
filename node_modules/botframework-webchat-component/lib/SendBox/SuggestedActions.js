"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.connectSuggestedActions = exports.default = void 0;

var _reactFilm = _interopRequireDefault(require("react-film"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _connectToWebChat = _interopRequireDefault(require("../connectToWebChat"));

var _SuggestedAction = _interopRequireDefault(require("./SuggestedAction"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint react/no-array-index-key: "off" */
function suggestedActionText(_ref) {
  var displayText = _ref.displayText,
      title = _ref.title,
      type = _ref.type,
      value = _ref.value;

  if (type === 'messageBack') {
    return title || displayText;
  } else if (title) {
    return title;
  } else if (typeof value === 'string') {
    return value;
  }

  return JSON.stringify(value);
}

var connectSuggestedActions = function connectSuggestedActions() {
  for (var _len = arguments.length, selectors = new Array(_len), _key = 0; _key < _len; _key++) {
    selectors[_key] = arguments[_key];
  }

  return _connectToWebChat.default.apply(void 0, [function (_ref2) {
    var language = _ref2.language,
        suggestedActions = _ref2.suggestedActions;
    return {
      language: language,
      suggestedActions: suggestedActions
    };
  }].concat(selectors));
};

exports.connectSuggestedActions = connectSuggestedActions;

var SuggestedActions = function SuggestedActions(_ref3) {
  var className = _ref3.className,
      styleSet = _ref3.styleSet,
      _ref3$suggestedAction = _ref3.suggestedActions,
      suggestedActions = _ref3$suggestedAction === void 0 ? [] : _ref3$suggestedAction;
  return !!suggestedActions.length && _react.default.createElement(_reactFilm.default, {
    autoCenter: false,
    className: (0, _classnames.default)(styleSet.suggestedActions + '', className + ''),
    showDots: false,
    styleSet: styleSet.options.suggestedActionsStyleSet
  }, suggestedActions.map(function (_ref4, index) {
    var displayText = _ref4.displayText,
        image = _ref4.image,
        text = _ref4.text,
        title = _ref4.title,
        type = _ref4.type,
        value = _ref4.value;
    return _react.default.createElement(_SuggestedAction.default, {
      buttonText: suggestedActionText({
        displayText: displayText,
        title: title,
        type: type,
        value: value
      }),
      displayText: displayText,
      image: image,
      key: index,
      text: text,
      type: type,
      value: value
    });
  }));
};

SuggestedActions.defaultProps = {
  className: ''
};
SuggestedActions.propTypes = {
  className: _propTypes.default.string,
  styleSet: _propTypes.default.shape({
    options: _propTypes.default.shape({
      suggestedActionsStyleSet: _propTypes.default.any.isRequired
    }).isRequired,
    suggestedActions: _propTypes.default.any.isRequired
  }).isRequired,
  suggestedActions: _propTypes.default.arrayOf(_propTypes.default.shape({
    displayText: _propTypes.default.string,
    image: _propTypes.default.string,
    text: _propTypes.default.string,
    title: _propTypes.default.string,
    type: _propTypes.default.string.isRequired,
    value: _propTypes.default.any
  })).isRequired
};

var _default = connectSuggestedActions(function (_ref5) {
  var styleSet = _ref5.styleSet;
  return {
    styleSet: styleSet
  };
})(SuggestedActions);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TZW5kQm94L1N1Z2dlc3RlZEFjdGlvbnMuanMiXSwibmFtZXMiOlsic3VnZ2VzdGVkQWN0aW9uVGV4dCIsImRpc3BsYXlUZXh0IiwidGl0bGUiLCJ0eXBlIiwidmFsdWUiLCJKU09OIiwic3RyaW5naWZ5IiwiY29ubmVjdFN1Z2dlc3RlZEFjdGlvbnMiLCJzZWxlY3RvcnMiLCJjb25uZWN0VG9XZWJDaGF0IiwibGFuZ3VhZ2UiLCJzdWdnZXN0ZWRBY3Rpb25zIiwiU3VnZ2VzdGVkQWN0aW9ucyIsImNsYXNzTmFtZSIsInN0eWxlU2V0IiwibGVuZ3RoIiwib3B0aW9ucyIsInN1Z2dlc3RlZEFjdGlvbnNTdHlsZVNldCIsIm1hcCIsImluZGV4IiwiaW1hZ2UiLCJ0ZXh0IiwiZGVmYXVsdFByb3BzIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic3RyaW5nIiwic2hhcGUiLCJhbnkiLCJpc1JlcXVpcmVkIiwiYXJyYXlPZiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOzs7O0FBUkE7QUFVQSxTQUFTQSxtQkFBVCxPQUFrRTtBQUFBLE1BQW5DQyxXQUFtQyxRQUFuQ0EsV0FBbUM7QUFBQSxNQUF0QkMsS0FBc0IsUUFBdEJBLEtBQXNCO0FBQUEsTUFBZkMsSUFBZSxRQUFmQSxJQUFlO0FBQUEsTUFBVEMsS0FBUyxRQUFUQSxLQUFTOztBQUNoRSxNQUFJRCxJQUFJLEtBQUssYUFBYixFQUE0QjtBQUMxQixXQUFPRCxLQUFLLElBQUlELFdBQWhCO0FBQ0QsR0FGRCxNQUVPLElBQUlDLEtBQUosRUFBVztBQUNoQixXQUFPQSxLQUFQO0FBQ0QsR0FGTSxNQUVBLElBQUksT0FBT0UsS0FBUCxLQUFpQixRQUFyQixFQUErQjtBQUNwQyxXQUFPQSxLQUFQO0FBQ0Q7O0FBRUQsU0FBT0MsSUFBSSxDQUFDQyxTQUFMLENBQWVGLEtBQWYsQ0FBUDtBQUNEOztBQUVELElBQU1HLHVCQUF1QixHQUFHLFNB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TUFKSDtBQUtkdEIsSUFBQUEsSUFBSSxFQUFFcUIsbUJBQVVDLE1BQVYsQ0FBaUJHLFVBTFQ7QUFNZHhCLElBQUFBLEtBQUssRUFBRW9CLG1CQUFVRztBQU5ILEdBQWhCLENBRGdCLEVBU2hCQztBQWpCeUIsQ0FBN0I7O2VBb0JlckIsdUJBQXVCLENBQUM7QUFBQSxNQUFHTyxRQUFILFNBQUdBLFFBQUg7QUFBQSxTQUFtQjtBQUFFQSxJQUFBQSxRQUFRLEVBQVJBO0FBQUYsR0FBbkI7QUFBQSxDQUFELENBQXZCLENBQTBERixnQkFBMUQsQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludCByZWFjdC9uby1hcnJheS1pbmRleC1rZXk6IFwib2ZmXCIgKi9cblxuaW1wb3J0IEJhc2ljRmlsbSBmcm9tICdyZWFjdC1maWxtJztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBjb25uZWN0VG9XZWJDaGF0IGZyb20gJy4uL2Nvbm5lY3RUb1dlYkNoYXQnO1xuaW1wb3J0IFN1Z2dlc3RlZEFjdGlvbiBmcm9tICcuL1N1Z2dlc3RlZEFjdGlvbic7XG5cbmZ1bmN0aW9uIHN1Z2dlc3RlZEFjdGlvblRleHQoeyBkaXNwbGF5VGV4dCwgdGl0bGUsIHR5cGUsIHZhbHVlIH0pIHtcbiAgaWYgKHR5cGUgPT09ICdtZXNzYWdlQmFjaycpIHtcbiAgICByZXR1cm4gdGl0bGUgfHwgZGlzcGxheVRleHQ7XG4gIH0gZWxzZSBpZiAodGl0bGUpIHtcbiAgICByZXR1cm4gdGl0bGU7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBKU09OLnN0cmluZ2lmeSh2YWx1ZSk7XG59XG5cbmNvbnN0IGNvbm5lY3RTdWdnZXN0ZWRBY3Rpb25zID0gKC4uLnNlbGVjdG9ycykgPT5cbiAgY29ubmVjdFRvV2ViQ2hhdChcbiAgICAoeyBsYW5ndWFnZSwgc3VnZ2VzdGVkQWN0aW9ucyB9KSA9PiAoe1xuICAgICAgbGFuZ3VhZ2UsXG4gICAgICBzdWdnZXN0ZWRBY3Rpb25zXG4gICAgfSksXG4gICAgLi4uc2VsZWN0b3JzXG4gICk7XG5cbmNvbnN0IFN1Z2dlc3RlZEFjdGlvbnMgPSAoeyBjbGFzc05hbWUsIHN0eWxlU2V0LCBzdWdnZXN0ZWRBY3Rpb25zID0gW10gfSkgPT5cbiAgISFzdWdnZXN0ZWRBY3Rpb25zLmxlbmd0aCAmJiAoXG4gICAgPEJhc2ljRmlsbVxuICAgICAgYXV0b0NlbnRlcj17ZmFsc2V9XG4gICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoc3R5bGVTZXQuc3VnZ2VzdGVkQWN0aW9ucyArICcnLCBjbGFzc05hbWUgKyAnJyl9XG4gICAgICBzaG93RG90cz17ZmFsc2V9XG4gICAgICBzdHlsZVNldD17c3R5bGVTZXQub3B0aW9ucy5zdWdnZXN0ZWRBY3Rpb25zU3R5bGVTZXR9XG4gICAgPlxuICAgICAge3N1Z2dlc3RlZEFjdGlvbnMubWFwKCh7IGRpc3BsYXlUZXh0LCBpbWFnZSwgdGV4dCwgdGl0bGUsIHR5cGUsIHZhbHVlIH0sIGluZGV4KSA9PiAoXG4gICAgICAgIDxTdWdnZXN0ZWRBY3Rpb25cbiAgICAgICAgICBidXR0b25UZXh0PXtzdWdnZXN0ZWRBY3Rpb25UZXh0KHsgZGlzcGxheVRleHQsIHRpdGxlLCB0eXBlLCB2YWx1ZSB9KX1cbiAgICAgICAgICBkaXNwbGF5VGV4dD17ZGlzcGxheVRleHR9XG4gICAgICAgICAgaW1hZ2U9e2ltYWdlfVxuICAgICAgICAgIGtleT17aW5kZXh9XG4gICAgICAgICAgdGV4dD17dGV4dH1cbiAgICAgICAgICB0eXBlPXt0eXBlfVxuICAgICAgICAgIHZhbHVlPXt2YWx1ZX1cbiAgICAgICAgLz5cbiAgICAgICkpfVxuICAgIDwvQmFzaWNGaWxtPlxuICApO1xuXG5TdWdnZXN0ZWRBY3Rpb25zLmRlZmF1bHRQcm9wcyA9IHtcbiAgY2xhc3NOYW1lOiAnJ1xufTtcblxuU3VnZ2VzdGVkQWN0aW9ucy5wcm9wVHlwZXMgPSB7XG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgc3R5bGVTZXQ6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgb3B0aW9uczogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgIHN1Z2dlc3RlZEFjdGlvbnNTdHlsZVNldDogUHJvcFR5cGVzLmFueS5pc1JlcXVpcmVkXG4gICAgfSkuaXNSZXF1aXJlZCxcbiAgICBzdWdnZXN0ZWRBY3Rpb25zOiBQcm9wVHlwZXMuYW55LmlzUmVxdWlyZWRcbiAgfSkuaXNSZXF1aXJlZCxcbiAgc3VnZ2VzdGVkQWN0aW9uczogUHJvcFR5cGVzLmFycmF5T2YoXG4gICAgUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgIGRpc3BsYXlUZXh0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgICAgaW1hZ2U6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgICB0ZXh0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgICAgdGl0bGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgICB0eXBlOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgICB2YWx1ZTogUHJvcFR5cGVzLmFueVxuICAgIH0pXG4gICkuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdFN1Z2dlc3RlZEFjdGlvbnMoKHsgc3R5bGVTZXQgfSkgPT4gKHsgc3R5bGVTZXQgfSkpKFN1Z2dlc3RlZEFjdGlvbnMpO1xuXG5leHBvcnQgeyBjb25uZWN0U3VnZ2VzdGVkQWN0aW9ucyB9O1xuIl19