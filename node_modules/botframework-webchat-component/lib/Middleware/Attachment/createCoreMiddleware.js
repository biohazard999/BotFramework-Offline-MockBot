"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createCoreMiddleware;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _AudioAttachment = _interopRequireDefault(require("../../Attachment/AudioAttachment"));

var _DownloadAttachment = _interopRequireDefault(require("../../Attachment/DownloadAttachment"));

var _ImageAttachment = _interopRequireDefault(require("../../Attachment/ImageAttachment"));

var _TextAttachment = _interopRequireDefault(require("../../Attachment/TextAttachment"));

var _TypingActivity = _interopRequireDefault(require("../../Attachment/TypingActivity"));

var _VideoAttachment = _interopRequireDefault(require("../../Attachment/VideoAttachment"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// TODO: [P4] Rename this file or the whole middleware, it looks either too simple or too comprehensive now
function createCoreMiddleware() {
  return function () {
    return function (next) {
      var Attachment = function Attachment(_ref) {
        var _ref$activity = _ref.activity,
            activity = _ref$activity === void 0 ? {} : _ref$activity,
            attachment = _ref.attachment,
            _ref$attachment = _ref.attachment;
        _ref$attachment = _ref$attachment === void 0 ? {} : _ref$attachment;
        var contentType = _ref$attachment.contentType,
            contentUrl = _ref$attachment.contentUrl;
        return activity.type === 'typing' ? _react.default.createElement(_TypingActivity.default, null) : /^audio\//.test(contentType) ? _react.default.createElement(_AudioAttachment.default, {
          activity: activity,
          attachment: attachment
        }) : /^image\//.test(contentType) ? _react.default.createElement(_ImageAttachment.default, {
          activity: activity,
          attachment: attachment
        }) : /^video\//.test(contentType) ? _react.default.createElement(_VideoAttachment.default, {
          activity: activity,
          attachment: attachment
        }) : contentUrl || contentType === 'application/octet-stream' ? _react.default.createElement(_DownloadAttachment.default, {
          activity: activity,
          attachment: attachment
        }) : /^text\//.test(contentType) ? _react.default.createElement(_TextAttachment.default, {
          activity: activity,
          attachment: attachment
        }) : next({
          activity: activity,
          attachment: attachment
        });
      };

      Attachment.propTypes = {
        activity: _propTypes.default.any.isRequired,
        attachment: _propTypes.default.shape({
          contentType: _propTypes.default.string.isRequired,
          contentUrl: _propTypes.default.string.isRequired
        }).isRequired
      };
      return Attachment;
    };
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9NaWRkbGV3YXJlL0F0dGFjaG1lbnQvY3JlYXRlQ29yZU1pZGRsZXdhcmUuanMiXSwibmFtZXMiOlsiY3JlYXRlQ29yZU1pZGRsZXdhcmUiLCJuZXh0IiwiQXR0YWNobWVudCIsImFjdGl2aXR5IiwiYXR0YWNobWVudCIsImNvbnRlbnRUeXBlIiwiY29udGVudFVybCIsInR5cGUiLCJ0ZXN0IiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiYW55IiwiaXNSZXF1aXJlZCIsInNoYXBlIiwic3RyaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQTtBQUNlLFNBQVNBLG9CQUFULEdBQWdDO0FBQzdDLFNBQU87QUFBQSxXQUFNLFVBQUFDLElBQUksRUFBSTtBQUNuQixVQUFNQyxVQUFVLEdBQUcsU0FBYkEsVUFBYTtBQUFBLGlDQUFHQyxRQUFIO0FBQUEsWUFBR0EsUUFBSCw4QkFBYyxFQUFkO0FBQUEsWUFBa0JDLFVBQWxCLFFBQWtCQSxVQUFsQjtBQUFBLG1DQUE4QkEsVUFBOUI7QUFBQSx1REFBd0UsRUFBeEU7QUFBQSxZQUE0Q0MsV0FBNUMsbUJBQTRDQSxXQUE1QztBQUFBLFlBQXlEQyxVQUF6RCxtQkFBeURBLFVBQXpEO0FBQUEsZUFDakJILFFBQVEsQ0FBQ0ksSUFBVCxLQUFrQixRQUFsQixHQUNFLDZCQUFDLHVCQUFELE9BREYsR0FFSSxXQUFZQyxJQUFaLENBQWlCSCxXQUFqQixJQUNGLDZCQUFDLHdCQUFEO0FBQWlCLFVBQUEsUUFBUSxFQUFFRixRQUEzQjtBQUFxQyxVQUFBLFVBQVUsRUFBRUM7QUFBakQsVUFERSxHQUVBLFdBQVlJLElBQVosQ0FBaUJILFdBQWpCLElBQ0YsNkJBQUMsd0JBQUQ7QUFBaUIsVUFBQSxRQUFRLEVBQUVGLFFBQTNCO0FBQXFDLFVBQUEsVUFBVSxFQUFFQztBQUFqRCxVQURFLEdBRUEsV0FBWUksSUFBWixDQUFpQkgsV0FBakIsSUFDRiw2QkFBQyx3QkFBRDtBQUFpQixVQUFBLFFBQVEsRUFBRUYsUUFBM0I7QUFBcUMsVUFBQSxVQUFVLEVBQUVDO0FBQWpELFVBREUsR0FFQUUsVUFBVSxJQUFJRCxXQUFXLEtBQUssMEJBQTlCLEdBQ0YsNkJBQUMsMkJBQUQ7QUFBb0IsVUFBQSxRQUFRLEVBQUVGLFFBQTlCO0FBQXdDLFVBQUEsVUFBVSxFQUFFQztBQUFwRCxVQURFLEdBRUEsVUFBV0ksSUFBWCxDQUFnQkgsV0FBaEIsSUFDRiw2QkFBQyx1QkFBRDtBQUFnQixVQUFBLFFBQVEsRUFBRUYsUUFBMUI7QUFBb0MsVUFBQSxVQUFVLEVBQUVDO0FBQWhELFVBREUsR0FHRkgsSUFBSSxDQUFDO0FBQUVFLFVBQUFBLFFBQVEsRUFBUkEsUUFBRjtBQUFZQyxVQUFBQSxVQUFVLEVBQVZBO0FBQVosU0FBRCxDQWRXO0FBQUEsT0FBbkI7O0FBaUJBRixNQUFBQSxVQUFVLENBQUNPLFNBQVgsR0FBdUI7QUFDckJOLFFBQUFBLFFBQVEsRUFBRU8sbUJBQVVDLEdBQVYsQ0FBY0MsVUFESDtBQUVyQlIsUUFBQUEsVUFBVSxFQUFFTSxtQkFBVUcsS0FBVixDQUFnQjtBQUMxQlIsVUFBQUEsV0FBVyxFQUFFSyxtQkFBVUksTUFBVixDQUFpQkYsVUFESjtBQUUxQk4sVUFBQUEsVUFBVSxFQUFFSSxtQkFBVUksTUFBVixDQUFpQkY7QUFGSCxTQUFoQixFQUdUQTtBQUxrQixPQUF2QjtBQVFBLGFBQU9WLFVBQVA7QUFDRCxLQTNCTTtBQUFBLEdBQVA7QUE0QkQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IEF1ZGlvQXR0YWNobWVudCBmcm9tICcuLi8uLi9BdHRhY2htZW50L0F1ZGlvQXR0YWNobWVudCc7XG5pbXBvcnQgRG93bmxvYWRBdHRhY2htZW50IGZyb20gJy4uLy4uL0F0dGFjaG1lbnQvRG93bmxvYWRBdHRhY2htZW50JztcbmltcG9ydCBJbWFnZUF0dGFjaG1lbnQgZnJvbSAnLi4vLi4vQXR0YWNobWVudC9JbWFnZUF0dGFjaG1lbnQnO1xuaW1wb3J0IFRleHRBdHRhY2htZW50IGZyb20gJy4uLy4uL0F0dGFjaG1lbnQvVGV4dEF0dGFjaG1lbnQnO1xuaW1wb3J0IFR5cGluZ0FjdGl2aXR5IGZyb20gJy4uLy4uL0F0dGFjaG1lbnQvVHlwaW5nQWN0aXZpdHknO1xuaW1wb3J0IFZpZGVvQXR0YWNobWVudCBmcm9tICcuLi8uLi9BdHRhY2htZW50L1ZpZGVvQXR0YWNobWVudCc7XG5cbi8vIFRPRE86IFtQNF0gUmVuYW1lIHRoaXMgZmlsZSBvciB0aGUgd2hvbGUgbWlkZGxld2FyZSwgaXQgbG9va3MgZWl0aGVyIHRvbyBzaW1wbGUgb3IgdG9vIGNvbXByZWhlbnNpdmUgbm93XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVDb3JlTWlkZGxld2FyZSgpIHtcbiAgcmV0dXJuICgpID0+IG5leHQgPT4ge1xuICAgIGNvbnN0IEF0dGFjaG1lbnQgPSAoeyBhY3Rpdml0eSA9IHt9LCBhdHRhY2htZW50LCBhdHRhY2htZW50OiB7IGNvbnRlbnRUeXBlLCBjb250ZW50VXJsIH0gPSB7fSB9KSA9PlxuICAgICAgYWN0aXZpdHkudHlwZSA9PT0gJ3R5cGluZycgPyAoXG4gICAgICAgIDxUeXBpbmdBY3Rpdml0eSAvPlxuICAgICAgKSA6IC9eYXVkaW9cXC8vdS50ZXN0KGNvbnRlbnRUeXBlKSA/IChcbiAgICAgICAgPEF1ZGlvQXR0YWNobWVudCBhY3Rpdml0eT17YWN0aXZpdHl9IGF0dGFjaG1lbnQ9e2F0dGFjaG1lbnR9IC8+XG4gICAgICApIDogL15pbWFnZVxcLy91LnRlc3QoY29udGVudFR5cGUpID8gKFxuICAgICAgICA8SW1hZ2VBdHRhY2htZW50IGFjdGl2aXR5PXthY3Rpdml0eX0gYXR0YWNobWVudD17YXR0YWNobWVudH0gLz5cbiAgICAgICkgOiAvXnZpZGVvXFwvL3UudGVzdChjb250ZW50VHlwZSkgPyAoXG4gICAgICAgIDxWaWRlb0F0dGFjaG1lbnQgYWN0aXZpdHk9e2FjdGl2aXR5fSBhdHRhY2htZW50PXthdHRhY2htZW50fSAvPlxuICAgICAgKSA6IGNvbnRlbnRVcmwgfHwgY29udGVudFR5cGUgPT09ICdhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0nID8gKFxuICAgICAgICA8RG93bmxvYWRBdHRhY2htZW50IGFjdGl2aXR5PXthY3Rpdml0eX0gYXR0YWNobWVudD17YXR0YWNobWVudH0gLz5cbiAgICAgICkgOiAvXnRleHRcXC8vdS50ZXN0KGNvbnRlbnRUeXBlKSA/IChcbiAgICAgICAgPFRleHRBdHRhY2htZW50IGFjdGl2aXR5PXthY3Rpdml0eX0gYXR0YWNobWVudD17YXR0YWNobWVudH0gLz5cbiAgICAgICkgOiAoXG4gICAgICAgIG5leHQoeyBhY3Rpdml0eSwgYXR0YWNobWVudCB9KVxuICAgICAgKTtcblxuICAgIEF0dGFjaG1lbnQucHJvcFR5cGVzID0ge1xuICAgICAgYWN0aXZpdHk6IFByb3BUeXBlcy5hbnkuaXNSZXF1aXJlZCxcbiAgICAgIGF0dGFjaG1lbnQ6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICAgIGNvbnRlbnRUeXBlOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgICAgIGNvbnRlbnRVcmw6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZFxuICAgICAgfSkuaXNSZXF1aXJlZFxuICAgIH07XG5cbiAgICByZXR1cm4gQXR0YWNobWVudDtcbiAgfTtcbn1cbiJdfQ==