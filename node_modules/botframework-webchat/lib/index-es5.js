"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  createDirectLine: true
};
exports.createDirectLine = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

require("core-js/modules/es6.array.find-index");

require("core-js/modules/es6.array.find");

require("core-js/modules/es6.array.iterator");

require("core-js/modules/es6.object.assign");

require("core-js/modules/es6.math.sign");

require("core-js/modules/es6.number.is-finite");

require("core-js/modules/es6.promise");

require("core-js/modules/es6.string.starts-with");

require("core-js/modules/es6.symbol");

require("core-js/modules/es7.array.includes");

require("url-search-params-polyfill");

require("whatwg-fetch");

var _indexMinimal = require("./index-minimal");

var _addVersion = _interopRequireDefault(require("./addVersion"));

var _createDirectLine = _interopRequireDefault(require("./createDirectLine"));

var _index = require("./index");

Object.keys(_index).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _index[key];
    }
  });
});

/* eslint dot-notation: ["error", { "allowPattern": "^WebChat$" }] */
// window['WebChat'] is required for TypeScript
// Polyfills for IE11 and other ES5 browsers
// To maintain quality, we prefer polyfills without additives
// For example, we prefer Promise implementation from "core-js" than "bluebird"
var createDirectLine = function createDirectLine(options) {
  options.botAgent && console.warn('Web Chat: Developers are not currently allowed to set botAgent in the createDirectLine function. See https://github.com/microsoft/BotFramework-WebChat/issues/2119 for more details.');
  return (0, _createDirectLine.default)((0, _objectSpread2.default)({}, options, {
    botAgent: "WebChat/".concat(_indexMinimal.version, " (ES5)")
  }));
};

exports.createDirectLine = createDirectLine;
window['WebChat'] = (0, _objectSpread2.default)({}, window['WebChat'], {
  createDirectLine: createDirectLine
});
(0, _addVersion.default)('full-es5');
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC1lczUudHMiXSwibmFtZXMiOlsiY3JlYXRlRGlyZWN0TGluZSIsIm9wdGlvbnMiLCJib3RBZ2VudCIsImNvbnNvbGUiLCJ3YXJuIiwidmVyc2lvbiIsIndpbmRvdyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFPQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUF2QkE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQW9CTyxJQUFNQSxnQkFBZ0IsR0FBRyxTQUFuQkEsZ0JBQW1CLENBQUFDLE9BQU8sRUFBSTtBQUN6Q0EsRUFBQUEsT0FBTyxDQUFDQyxRQUFSLElBQ0VDLE9BQU8sQ0FBQ0MsSUFBUixDQUNFLHNMQURGLENBREY7QUFJQSxTQUFPLCtEQUE2QkgsT0FBN0I7QUFBc0NDLElBQUFBLFFBQVEsb0JBQWFHLHFCQUFiO0FBQTlDLEtBQVA7QUFDRCxDQU5NOzs7QUFRUEMsTUFBTSxDQUFDLFNBQUQsQ0FBTixtQ0FDS0EsTUFBTSxDQUFDLFNBQUQsQ0FEWDtBQUVFTixFQUFBQSxnQkFBZ0IsRUFBaEJBO0FBRkY7QUFLQSx5QkFBVyxVQUFYIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50IGRvdC1ub3RhdGlvbjogW1wiZXJyb3JcIiwgeyBcImFsbG93UGF0dGVyblwiOiBcIl5XZWJDaGF0JFwiIH1dICovXG4vLyB3aW5kb3dbJ1dlYkNoYXQnXSBpcyByZXF1aXJlZCBmb3IgVHlwZVNjcmlwdFxuXG4vLyBQb2x5ZmlsbHMgZm9yIElFMTEgYW5kIG90aGVyIEVTNSBicm93c2Vyc1xuLy8gVG8gbWFpbnRhaW4gcXVhbGl0eSwgd2UgcHJlZmVyIHBvbHlmaWxscyB3aXRob3V0IGFkZGl0aXZlc1xuLy8gRm9yIGV4YW1wbGUsIHdlIHByZWZlciBQcm9taXNlIGltcGxlbWVudGF0aW9uIGZyb20gXCJjb3JlLWpzXCIgdGhhbiBcImJsdWViaXJkXCJcblxuaW1wb3J0ICdjb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZpbmQtaW5kZXgnO1xuaW1wb3J0ICdjb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZpbmQnO1xuaW1wb3J0ICdjb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5Lml0ZXJhdG9yJztcbmltcG9ydCAnY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QuYXNzaWduJztcbmltcG9ydCAnY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLnNpZ24nO1xuaW1wb3J0ICdjb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci5pcy1maW5pdGUnO1xuaW1wb3J0ICdjb3JlLWpzL21vZHVsZXMvZXM2LnByb21pc2UnO1xuaW1wb3J0ICdjb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5zdGFydHMtd2l0aCc7XG5pbXBvcnQgJ2NvcmUtanMvbW9kdWxlcy9lczYuc3ltYm9sJztcbmltcG9ydCAnY29yZS1qcy9tb2R1bGVzL2VzNy5hcnJheS5pbmNsdWRlcyc7XG5pbXBvcnQgJ3VybC1zZWFyY2gtcGFyYW1zLXBvbHlmaWxsJztcbmltcG9ydCAnd2hhdHdnLWZldGNoJztcbmltcG9ydCB7IHZlcnNpb24gfSBmcm9tICcuL2luZGV4LW1pbmltYWwnO1xuaW1wb3J0IGFkZFZlcnNpb24gZnJvbSAnLi9hZGRWZXJzaW9uJztcbmltcG9ydCBkZWZhdWx0Q3JlYXRlRGlyZWN0TGluZSBmcm9tICcuL2NyZWF0ZURpcmVjdExpbmUnO1xuXG5leHBvcnQgKiBmcm9tICcuL2luZGV4JztcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZURpcmVjdExpbmUgPSBvcHRpb25zID0+IHtcbiAgb3B0aW9ucy5ib3RBZ2VudCAmJlxuICAgIGNvbnNvbGUud2FybihcbiAgICAgICdXZWIgQ2hhdDogRGV2ZWxvcGVycyBhcmUgbm90IGN1cnJlbnRseSBhbGxvd2VkIHRvIHNldCBib3RBZ2VudCBpbiB0aGUgY3JlYXRlRGlyZWN0TGluZSBmdW5jdGlvbi4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9taWNyb3NvZnQvQm90RnJhbWV3b3JrLVdlYkNoYXQvaXNzdWVzLzIxMTkgZm9yIG1vcmUgZGV0YWlscy4nXG4gICAgKTtcbiAgcmV0dXJuIGRlZmF1bHRDcmVhdGVEaXJlY3RMaW5lKHsgLi4ub3B0aW9ucywgYm90QWdlbnQ6IGBXZWJDaGF0LyR7dmVyc2lvbn0gKEVTNSlgIH0pO1xufTtcblxud2luZG93WydXZWJDaGF0J10gPSB7XG4gIC4uLndpbmRvd1snV2ViQ2hhdCddLFxuICBjcmVhdGVEaXJlY3RMaW5lXG59O1xuXG5hZGRWZXJzaW9uKCdmdWxsLWVzNScpO1xuIl19