"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _botframeworkWebchatComponent = require("botframework-webchat-component");

var _memoizeOne = _interopRequireDefault(require("memoize-one"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _AdaptiveCardBuilder = require("./AdaptiveCardBuilder");

var _CommonCard = _interopRequireDefault(require("./CommonCard"));

/* eslint react/no-array-index-key: "off" */
var ImageContent = _botframeworkWebchatComponent.Components.ImageContent,
    VideoContent = _botframeworkWebchatComponent.Components.VideoContent;

var AnimationCardAttachment =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(AnimationCardAttachment, _React$Component);

  function AnimationCardAttachment(props) {
    var _this;

    (0, _classCallCheck2.default)(this, AnimationCardAttachment);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AnimationCardAttachment).call(this, props));
    _this.buildCard = (0, _memoizeOne.default)(function (adaptiveCards, content, styleOptions) {
      var builder = new _AdaptiveCardBuilder.AdaptiveCardBuilder(adaptiveCards, styleOptions);
      (content.images || []).forEach(function (image) {
        return builder.addImage(image.url, null, image.tap);
      });
      builder.addCommon(content);
      return builder.card;
    });
    return _this;
  }

  (0, _createClass2.default)(AnimationCardAttachment, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          adaptiveCardHostConfig = _this$props.adaptiveCardHostConfig,
          adaptiveCards = _this$props.adaptiveCards,
          attachment = _this$props.attachment,
          _this$props$attachmen = _this$props.attachment;
      _this$props$attachmen = _this$props$attachmen === void 0 ? {} : _this$props$attachmen;
      var _this$props$attachmen2 = _this$props$attachmen.content;
      _this$props$attachmen2 = _this$props$attachmen2 === void 0 ? {} : _this$props$attachmen2;
      var _this$props$attachmen3 = _this$props$attachmen2.media,
          media = _this$props$attachmen3 === void 0 ? [] : _this$props$attachmen3,
          styleSet = _this$props.styleSet;
      return _react.default.createElement("div", {
        className: styleSet.animationCardAttachment
      }, _react.default.createElement("ul", {
        className: "media-list"
      }, media.map(function (_ref, index) {
        var _ref$profile = _ref.profile,
            profile = _ref$profile === void 0 ? '' : _ref$profile,
            url = _ref.url;
        return _react.default.createElement("li", {
          key: index
        }, /\.gif$/i.test(url) ? _react.default.createElement(ImageContent, {
          alt: profile,
          src: url
        }) : _react.default.createElement(VideoContent, {
          alt: profile,
          src: url
        }));
      })), _react.default.createElement(_CommonCard.default, {
        adaptiveCardHostConfig: adaptiveCardHostConfig,
        adaptiveCards: adaptiveCards,
        attachment: attachment
      }));
    }
  }]);
  return AnimationCardAttachment;
}(_react.default.Component);

AnimationCardAttachment.propTypes = {
  adaptiveCardHostConfig: _propTypes.default.any.isRequired,
  adaptiveCards: _propTypes.default.any.isRequired,
  attachment: _propTypes.default.shape({
    content: _propTypes.default.shape({
      media: _propTypes.default.arrayOf(_propTypes.default.shape({
        profile: _propTypes.default.string,
        url: _propTypes.default.string.isRequired
      })).isRequired
    }).isRequired
  }).isRequired,
  styleSet: _propTypes.default.shape({
    animationCardAttachment: _propTypes.default.any.isRequired,
    options: _propTypes.default.any.isRequired
  }).isRequired
};

var _default = (0, _botframeworkWebchatComponent.connectToWebChat)(function (_ref2) {
  var styleSet = _ref2.styleSet;
  return {
    styleSet: styleSet
  };
})(AnimationCardAttachment);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hZGFwdGl2ZUNhcmRzL0F0dGFjaG1lbnQvQW5pbWF0aW9uQ2FyZEF0dGFjaG1lbnQuanMiXSwibmFtZXMiOlsiSW1hZ2VDb250ZW50IiwiQ29tcG9uZW50cyIsIlZpZGVvQ29udGVudCIsIkFuaW1hdGlvbkNhcmRBdHRhY2htZW50IiwicHJvcHMiLCJidWlsZENhcmQiLCJhZGFwdGl2ZUNhcmRzIiwiY29udGVudCIsInN0eWxlT3B0aW9ucyIsImJ1aWxkZXIiLCJBZGFwdGl2ZUNhcmRCdWlsZGVyIiwiaW1hZ2VzIiwiZm9yRWFjaCIsImltYWdlIiwiYWRkSW1hZ2UiLCJ1cmwiLCJ0YXAiLCJhZGRDb21tb24iLCJjYXJkIiwiYWRhcHRpdmVDYXJkSG9zdENvbmZpZyIsImF0dGFjaG1lbnQiLCJtZWRpYSIsInN0eWxlU2V0IiwiYW5pbWF0aW9uQ2FyZEF0dGFjaG1lbnQiLCJtYXAiLCJpbmRleCIsInByb2ZpbGUiLCJ0ZXN0IiwiUmVhY3QiLCJDb21wb25lbnQiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJhbnkiLCJpc1JlcXVpcmVkIiwic2hhcGUiLCJhcnJheU9mIiwic3RyaW5nIiwib3B0aW9ucyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOztBQVJBO0lBVVFBLFksR0FBK0JDLHdDLENBQS9CRCxZO0lBQWNFLFksR0FBaUJELHdDLENBQWpCQyxZOztJQUVoQkMsdUI7Ozs7O0FBQ0osbUNBQVlDLEtBQVosRUFBbUI7QUFBQTs7QUFBQTtBQUNqQiw2SEFBTUEsS0FBTjtBQUVBLFVBQUtDLFNBQUwsR0FBaUIseUJBQVEsVUFBQ0MsYUFBRCxFQUFnQkMsT0FBaEIsRUFBeUJDLFlBQXpCLEVBQTBDO0FBQ2pFLFVBQU1DLE9BQU8sR0FBRyxJQUFJQyx3Q0FBSixDQUF3QkosYUFBeEIsRUFBdUNFLFlBQXZDLENBQWhCO0FBRUEsT0FBQ0QsT0FBTyxDQUFDSSxN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ZXNsaW50IHJlYWN0L25vLWFycmF5LWluZGV4LWtleTogXCJvZmZcIiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnRzLCBjb25uZWN0VG9XZWJDaGF0IH0gZnJvbSAnYm90ZnJhbWV3b3JrLXdlYmNoYXQtY29tcG9uZW50JztcbmltcG9ydCBtZW1vaXplIGZyb20gJ21lbW9pemUtb25lJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBBZGFwdGl2ZUNhcmRCdWlsZGVyIH0gZnJvbSAnLi9BZGFwdGl2ZUNhcmRCdWlsZGVyJztcbmltcG9ydCBDb21tb25DYXJkIGZyb20gJy4vQ29tbW9uQ2FyZCc7XG5cbmNvbnN0IHsgSW1hZ2VDb250ZW50LCBWaWRlb0NvbnRlbnQgfSA9IENvbXBvbmVudHM7XG5cbmNsYXNzIEFuaW1hdGlvbkNhcmRBdHRhY2htZW50IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG5cbiAgICB0aGlzLmJ1aWxkQ2FyZCA9IG1lbW9pemUoKGFkYXB0aXZlQ2FyZHMsIGNvbnRlbnQsIHN0eWxlT3B0aW9ucykgPT4ge1xuICAgICAgY29uc3QgYnVpbGRlciA9IG5ldyBBZGFwdGl2ZUNhcmRCdWlsZGVyKGFkYXB0aXZlQ2FyZHMsIHN0eWxlT3B0aW9ucyk7XG5cbiAgICAgIChjb250ZW50LmltYWdlcyB8fCBbXSkuZm9yRWFjaChpbWFnZSA9PiBidWlsZGVyLmFkZEltYWdlKGltYWdlLnVybCwgbnVsbCwgaW1hZ2UudGFwKSk7XG5cbiAgICAgIGJ1aWxkZXIuYWRkQ29tbW9uKGNvbnRlbnQpO1xuXG4gICAgICByZXR1cm4gYnVpbGRlci5jYXJkO1xuICAgIH0pO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGFkYXB0aXZlQ2FyZEhvc3RDb25maWcsXG4gICAgICBhZGFwdGl2ZUNhcmRzLFxuICAgICAgYXR0YWNobWVudCxcbiAgICAgIGF0dGFjaG1lbnQ6IHsgY29udGVudDogeyBtZWRpYSA9IFtdIH0gPSB7fSB9ID0ge30sXG4gICAgICBzdHlsZVNldFxuICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZVNldC5hbmltYXRpb25DYXJkQXR0YWNobWVudH0+XG4gICAgICAgIDx1bCBjbGFzc05hbWU9XCJtZWRpYS1saXN0XCI+XG4gICAgICAgICAge21lZGlhLm1hcCgoeyBwcm9maWxlID0gJycsIHVybCB9LCBpbmRleCkgPT4gKFxuICAgICAgICAgICAgPGxpIGtleT17aW5kZXh9PlxuICAgICAgICAgICAgICB7L1xcLmdpZiQvaXUudGVzdCh1cmwpID8gKFxuICAgICAgICAgICAgICAgIDxJbWFnZUNvbnRlbnQgYWx0PXtwcm9maWxlfSBzcmM9e3VybH0gLz5cbiAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICA8VmlkZW9Db250ZW50IGFsdD17cHJvZmlsZX0gc3JjPXt1cmx9IC8+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICkpfVxuICAgICAgICA8L3VsPlxuICAgICAgICA8Q29tbW9uQ2FyZFxuICAgICAgICAgIGFkYXB0aXZlQ2FyZEhvc3RDb25maWc9e2FkYXB0aXZlQ2FyZEhvc3RDb25maWd9XG4gICAgICAgICAgYWRhcHRpdmVDYXJkcz17YWRhcHRpdmVDYXJkc31cbiAgICAgICAgICBhdHRhY2htZW50PXthdHRhY2htZW50fVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5BbmltYXRpb25DYXJkQXR0YWNobWVudC5wcm9wVHlwZXMgPSB7XG4gIGFkYXB0aXZlQ2FyZEhvc3RDb25maWc6IFByb3BUeXBlcy5hbnkuaXNSZXF1aXJlZCxcbiAgYWRhcHRpdmVDYXJkczogUHJvcFR5cGVzLmFueS5pc1JlcXVpcmVkLFxuICBhdHRhY2htZW50OiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGNvbnRlbnQ6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICBtZWRpYTogUHJvcFR5cGVzLmFycmF5T2YoXG4gICAgICAgIFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICAgICAgcHJvZmlsZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICAgICAgICB1cmw6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZFxuICAgICAgICB9KVxuICAgICAgKS5pc1JlcXVpcmVkXG4gICAgfSkuaXNSZXF1aXJlZFxuICB9KS5pc1JlcXVpcmVkLFxuICBzdHlsZVNldDogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBhbmltYXRpb25DYXJkQXR0YWNobWVudDogUHJvcFR5cGVzLmFueS5pc1JlcXVpcmVkLFxuICAgIG9wdGlvbnM6IFByb3BUeXBlcy5hbnkuaXNSZXF1aXJlZFxuICB9KS5pc1JlcXVpcmVkXG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0VG9XZWJDaGF0KCh7IHN0eWxlU2V0IH0pID0+ICh7IHN0eWxlU2V0IH0pKShBbmltYXRpb25DYXJkQXR0YWNobWVudCk7XG4iXX0=