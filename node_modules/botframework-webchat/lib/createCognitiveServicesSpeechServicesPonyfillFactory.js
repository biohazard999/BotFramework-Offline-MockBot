"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createCognitiveServicesSpeechServicesPonyfillFactory;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _SpeechServices = _interopRequireDefault(require("web-speech-cognitive-services/lib/SpeechServices"));

function injectReferenceGrammarID(_ref, referenceGrammarID) {
  var SpeechGrammarList = _ref.SpeechGrammarList,
      SpeechRecognition = _ref.SpeechRecognition;
  return (
    /*#__PURE__*/
    function (_SpeechRecognition) {
      (0, _inherits2.default)(_class, _SpeechRecognition);

      function _class() {
        (0, _classCallCheck2.default)(this, _class);
        return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(_class).apply(this, arguments));
      }

      (0, _createClass2.default)(_class, [{
        key: "start",
        value: function start() {
          this.grammars = new SpeechGrammarList();
          this.grammars.referenceGrammar = referenceGrammarID || '';
          return (0, _get2.default)((0, _getPrototypeOf2.default)(_class.prototype), "start", this).call(this);
        }
      }]);
      return _class;
    }(SpeechRecognition)
  );
}

function createCognitiveServicesSpeechServicesPonyfillFactory(_x) {
  return _createCognitiveServicesSpeechServicesPonyfillFactory.apply(this, arguments);
}

function _createCognitiveServicesSpeechServicesPonyfillFactory() {
  _createCognitiveServicesSpeechServicesPonyfillFactory = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee(_ref2) {
    var authorizationToken, region, subscriptionKey, textNormalization, ponyfill, SpeechGrammarList, speechSynthesis, SpeechSynthesisUtterance;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            authorizationToken = _ref2.authorizationToken, region = _ref2.region, subscriptionKey = _ref2.subscriptionKey, textNormalization = _ref2.textNormalization;
            console.warn('Web Chat: Cognitive Services Speech Services support is currently in preview. If you encounter any problems, please file us an issue at https://github.com/microsoft/BotFramework-WebChat/issues/.');
            _context.next = 4;
            return (0, _SpeechServices.default)({
              authorizationToken: authorizationToken,
              region: region,
              subscriptionKey: subscriptionKey,
              textNormalization: textNormalization
            });

          case 4:
            ponyfill = _context.sent;
            SpeechGrammarList = ponyfill.SpeechGrammarList, speechSynthesis = ponyfill.speechSynthesis, SpeechSynthesisUtterance = ponyfill.SpeechSynthesisUtterance;
            return _context.abrupt("return", function (_ref3) {
              var referenceGrammarID = _ref3.referenceGrammarID;
              return {
                SpeechGrammarList: SpeechGrammarList,
                SpeechRecognition: injectReferenceGrammarID(ponyfill, referenceGrammarID),
                speechSynthesis: speechSynthesis,
                SpeechSynthesisUtterance: SpeechSynthesisUtterance
              };
            });

          case 7:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _createCognitiveServicesSpeechServicesPonyfillFactory.apply(this, arguments);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jcmVhdGVDb2duaXRpdmVTZXJ2aWNlc1NwZWVjaFNlcnZpY2VzUG9ueWZpbGxGYWN0b3J5LmpzIl0sIm5hbWVzIjpbImluamVjdFJlZmVyZW5jZUdyYW1tYXJJRCIsInJlZmVyZW5jZUdyYW1tYXJJRCIsIlNwZWVjaEdyYW1tYXJMaXN0IiwiU3BlZWNoUmVjb2duaXRpb24iLCJncmFtbWFycyIsInJlZmVyZW5jZUdyYW1tYXIiLCJjcmVhdGVDb2duaXRpdmVTZXJ2aWNlc1NwZWVjaFNlcnZpY2VzUG9ueWZpbGxGYWN0b3J5IiwiYXV0aG9yaXphdGlvblRva2VuIiwicmVnaW9uIiwic3Vic2NyaXB0aW9uS2V5IiwidGV4dE5vcm1hbGl6YXRpb24iLCJjb25zb2xlIiwid2FybiIsInBvbnlmaWxsIiwic3BlZWNoU3ludGhlc2lzIiwiU3BlZWNoU3ludGhlc2lzVXR0ZXJhbmNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBRUEsU0FBU0Esd0JBQVQsT0FBNEVDLGtCQUE1RSxFQUFnRztBQUFBLE1BQTVEQyxpQkFBNEQsUUFBNURBLGlCQUE0RDtBQUFBLE1BQXpDQyxpQkFBeUMsUUFBekNBLGlCQUF5QztBQUM5RjtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUEsZ0NBQ1U7QUFDTixlQUFLQyxRQUFMLEdBQWdCLElBQUlGLGlCQUFKLEVBQWhCO0FBQ0EsZUFBS0UsUUFBTCxDQUFjQyxnQkFBZCxHQUFpQ0osa0JBQWtCLElBQUksRUFBdkQ7QUFFQTtBQUNEO0FBTkg7QUFBQTtBQUFBLE1BQXFCRSxpQkFBckI7QUFBQTtBQVFEOztTQUU2Qkcsb0Q7Ozs7Ozs7NEJBQWY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ2JDLFlBQUFBLGtCQURhLFNBQ2JBLGtCQURhLEVBRWJDLE1BRmEsU0FFYkEsTUFGYSxFQUdiQyxlQUhhLFNBR2JBLGVBSGEsRUFJYkMsaUJBSmEsU0FJYkEsaUJBSmE7QUFNYkMsWUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQ0Usb01BREY7QUFOYTtBQUFBLG1CQVVVLDZCQUFlO0FBQ3BDTCxjQUFBQSxrQkFBa0IsRUFBbEJBLGtCQURvQztBQUVwQ0MsY0FBQUEsTUFBTSxFQUFOQSxNQUZvQztBQUdwQ0MsY0FBQUEsZUFBZSxFQUFmQSxlQUhvQztBQUlwQ0MsY0FBQUEsaUJBQWlCLEVBQWpCQTtBQUpvQyxhQUFmLENBVlY7O0FBQUE7QUFVUEcsWUFBQUEsUUFWTztBQWlCTFgsWUFBQUEsaUJBakJLLEdBaUI0RFcsUUFqQjVELENBaUJMWCxpQkFqQkssRUFpQmNZLGVBakJkLEdBaUI0REQsUUFqQjVELENBaUJjQyxlQWpCZCxFQWlCK0JDLHdCQWpCL0IsR0FpQjRERixRQWpCNUQsQ0FpQitCRSx3QkFqQi9CO0FBQUEsNkNBbUJOO0FBQUEsa0JBQUdkLGtCQUFILFNBQUdBLGtCQUFIO0FBQUEscUJBQTZCO0FBQ2xDQyxnQkFBQUEsaUJBQWlCLEVBQWpCQSxpQkFEa0M7QUFFbENDLGdCQUFBQSxpQkFBaUIsRUFBRUgsd0JBQXdCLENBQUNhLFFBQUQsRUFBV1osa0JBQVgsQ0FGVDtBQUdsQ2EsZ0JBQUFBLGVBQWUsRUFBZkEsZUFIa0M7QUFJbENDLGdCQUFBQSx3QkFBd0IsRUFBeEJBO0FBSmtDLGVBQTdCO0FBQUEsYUFuQk07O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGVQb255ZmlsbCBmcm9tICd3ZWItc3BlZWNoLWNvZ25pdGl2ZS1zZXJ2aWNlcy9saWIvU3BlZWNoU2VydmljZXMnO1xuXG5mdW5jdGlvbiBpbmplY3RSZWZlcmVuY2VHcmFtbWFySUQoeyBTcGVlY2hHcmFtbWFyTGlzdCwgU3BlZWNoUmVjb2duaXRpb24gfSwgcmVmZXJlbmNlR3JhbW1hcklEKSB7XG4gIHJldHVybiBjbGFzcyBleHRlbmRzIFNwZWVjaFJlY29nbml0aW9uIHtcbiAgICBzdGFydCgpIHtcbiAgICAgIHRoaXMuZ3JhbW1hcnMgPSBuZXcgU3BlZWNoR3JhbW1hckxpc3QoKTtcbiAgICAgIHRoaXMuZ3JhbW1hcnMucmVmZXJlbmNlR3JhbW1hciA9IHJlZmVyZW5jZUdyYW1tYXJJRCB8fCAnJztcblxuICAgICAgcmV0dXJuIHN1cGVyLnN0YXJ0KCk7XG4gICAgfVxuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBjcmVhdGVDb2duaXRpdmVTZXJ2aWNlc1NwZWVjaFNlcnZpY2VzUG9ueWZpbGxGYWN0b3J5KHtcbiAgYXV0aG9yaXphdGlvblRva2VuLFxuICByZWdpb24sXG4gIHN1YnNjcmlwdGlvbktleSxcbiAgdGV4dE5vcm1hbGl6YXRpb25cbn0pIHtcbiAgY29uc29sZS53YXJuKFxuICAgICdXZWIgQ2hhdDogQ29nbml0aXZlIFNlcnZpY2VzIFNwZWVjaCBTZXJ2aWNlcyBzdXBwb3J0IGlzIGN1cnJlbnRseSBpbiBwcmV2aWV3LiBJZiB5b3UgZW5jb3VudGVyIGFueSBwcm9ibGVtcywgcGxlYXNlIGZpbGUgdXMgYW4gaXNzdWUgYXQgaHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC9Cb3RGcmFtZXdvcmstV2ViQ2hhdC9pc3N1ZXMvLidcbiAgKTtcblxuICBjb25zdCBwb255ZmlsbCA9IGF3YWl0IGNyZWF0ZVBvbnlmaWxsKHtcbiAgICBhdXRob3JpemF0aW9uVG9rZW4sXG4gICAgcmVnaW9uLFxuICAgIHN1YnNjcmlwdGlvbktleSxcbiAgICB0ZXh0Tm9ybWFsaXphdGlvblxuICB9KTtcblxuICBjb25zdCB7IFNwZWVjaEdyYW1tYXJMaXN0LCBzcGVlY2hTeW50aGVzaXMsIFNwZWVjaFN5bnRoZXNpc1V0dGVyYW5jZSB9ID0gcG9ueWZpbGw7XG5cbiAgcmV0dXJuICh7IHJlZmVyZW5jZUdyYW1tYXJJRCB9KSA9PiAoe1xuICAgIFNwZWVjaEdyYW1tYXJMaXN0LFxuICAgIFNwZWVjaFJlY29nbml0aW9uOiBpbmplY3RSZWZlcmVuY2VHcmFtbWFySUQocG9ueWZpbGwsIHJlZmVyZW5jZUdyYW1tYXJJRCksXG4gICAgc3BlZWNoU3ludGhlc2lzLFxuICAgIFNwZWVjaFN5bnRoZXNpc1V0dGVyYW5jZVxuICB9KTtcbn1cbiJdfQ==